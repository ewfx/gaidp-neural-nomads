{
    "1000": {
        "rule_id": "1000",
        "rule_name": "Customer ID Length Validation",
        "rule_description": "Validates that Customer ID field is not longer than 255 characters",
        "sql_query": "SELECT `Transaction ID` FROM transactions WHERE LENGTH(`Customer ID`) > 255 AND `Customer ID` IS NOT NULL AND `Customer ID` != ''",
        "status": "active"
    },
    "1001": {
        "rule_id": "1001",
        "rule_name": "Customer ID No Carriage Return",
        "rule_description": "Validates that Customer ID field does not contain a carriage return character",
        "sql_query": "SELECT `Transaction ID` FROM transactions WHERE INSTR(`Customer ID`, CHAR(13)) > 0 AND `Customer ID` IS NOT NULL AND `Customer ID` != ''",
        "status": "active"
    },
    "1002": {
        "rule_id": "1002",
        "rule_name": "Customer ID No Line Feed",
        "rule_description": "Validates that Customer ID field does not contain a line feed character",
        "sql_query": "SELECT `Transaction ID` FROM transactions WHERE INSTR(`Customer ID`, CHAR(10)) > 0 AND `Customer ID` IS NOT NULL AND `Customer ID` != ''",
        "status": "active"
    },
    "1003": {
        "rule_id": "1003",
        "rule_name": "Customer ID No Comma",
        "rule_description": "Validates that Customer ID field does not contain a comma character",
        "sql_query": "SELECT `Transaction ID` FROM transactions WHERE INSTR(`Customer ID`, ',') > 0 AND `Customer ID` IS NOT NULL AND `Customer ID` != ''",
        "status": "active"
    },
    "1004": {
        "rule_id": "1004",
        "rule_name": "Customer ID No Unprintable Characters",
        "rule_description": "Validates that Customer ID field does not contain any unprintable characters",
        "sql_query": "SELECT `Transaction ID` FROM transactions WHERE LENGTH(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(`Customer ID`, CHAR(0), ''), CHAR(1), ''), CHAR(2), ''), CHAR(3), ''), CHAR(4), ''), CHAR(5), ''), CHAR(6), ''), CHAR(7), ''), CHAR(8), ''), CHAR(9), ''), CHAR(11), ''), CHAR(12), ''), CHAR(14), ''), CHAR(15), ''), CHAR(16), ''), CHAR(17), ''), CHAR(18), ''), CHAR(19), ''), CHAR(20), ''), CHAR(21), ''), CHAR(22), ''), CHAR(23), ''), CHAR(24), ''), CHAR(25), ''), CHAR(26), ''), CHAR(27), ''))) != LENGTH(`Customer ID`) AND `Customer ID` IS NOT NULL AND `Customer ID` != ''",
        "status": "active"
    },
    "1005": {
        "rule_id": "1005",
        "rule_name": "Internal ID Length Validation",
        "rule_description": "Validates that the Internal ID field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Internal ID\") > 255 AND \"Internal ID\" IS NOT NULL AND \"Internal ID\" != ''",
        "status": "active"
    },
    "1006": {
        "rule_id": "1006",
        "rule_name": "Internal ID Carriage Return Validation",
        "rule_description": "Validates that the Internal ID field does not contain a carriage return character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Internal ID\", CHAR(13)) > 0 AND \"Internal ID\" IS NOT NULL AND \"Internal ID\" != ''",
        "status": "active"
    },
    "1007": {
        "rule_id": "1007",
        "rule_name": "Internal ID Line Feed Validation",
        "rule_description": "Validates that the Internal ID field does not contain a line feed character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Internal ID\", CHAR(10)) > 0 AND \"Internal ID\" IS NOT NULL AND \"Internal ID\" != ''",
        "status": "active"
    },
    "1008": {
        "rule_id": "1008",
        "rule_name": "Internal ID Comma Validation",
        "rule_description": "Validates that the Internal ID field does not contain a comma character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Internal ID\", ',') > 0 AND \"Internal ID\" IS NOT NULL AND \"Internal ID\" != ''",
        "status": "active"
    },
    "1009": {
        "rule_id": "1009",
        "rule_name": "Internal ID Unprintable Character Validation",
        "rule_description": "Validates that the Internal ID field does not contain any unprintable characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(TRIM(\"Internal ID\", 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 ')) != 0 AND \"Internal ID\" IS NOT NULL AND \"Internal ID\" != ''",
        "status": "active"
    },
    "1010": {
        "rule_id": "1010",
        "rule_name": "Original Internal ID Length Validation",
        "rule_description": "Validates that the Original Internal ID field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Original Internal ID\") > 255 AND \"Original Internal ID\" IS NOT NULL AND \"Original Internal ID\" != ''",
        "status": "active"
    },
    "1011": {
        "rule_id": "1011",
        "rule_name": "Original Internal ID Carriage Return Validation",
        "rule_description": "Validates that the Original Internal ID field does not contain a carriage return character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Original Internal ID\", CHAR(13)) > 0 AND \"Original Internal ID\" IS NOT NULL AND \"Original Internal ID\" != ''",
        "status": "active"
    },
    "1012": {
        "rule_id": "1012",
        "rule_name": "Original Internal ID Line Feed Validation",
        "rule_description": "Validates that the Original Internal ID field does not contain a line feed character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Original Internal ID\", CHAR(10)) > 0 AND \"Original Internal ID\" IS NOT NULL AND \"Original Internal ID\" != ''",
        "status": "active"
    },
    "1013": {
        "rule_id": "1013",
        "rule_name": "Original Internal ID Comma Validation",
        "rule_description": "Validates that the Original Internal ID field does not contain a comma character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Original Internal ID\", ',') > 0 AND \"Original Internal ID\" IS NOT NULL AND \"Original Internal ID\" != ''",
        "status": "active"
    },
    "1014": {
        "rule_id": "1014",
        "rule_name": "Original Internal ID Unprintable Character Validation",
        "rule_description": "Validates that the Original Internal ID field does not contain any unprintable characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(TRIM(\"Original Internal ID\")) != LENGTH(\"Original Internal ID\") AND \"Original Internal ID\" IS NOT NULL AND \"Original Internal ID\" != ''",
        "status": "active"
    },
    "1015": {
        "rule_id": "1015",
        "rule_name": "Original Internal ID vs Internal ID Validation",
        "rule_description": "Validates that the Original Internal ID field is equal to the Internal ID field when it's the first submission or there is no change from the prior submission.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Original Internal ID\" != \"Internal ID\" AND \"Original Internal ID\" IS NOT NULL AND \"Original Internal ID\" != '' AND \"Internal ID\" IS NOT NULL AND \"Internal ID\" != ''",
        "status": "active"
    },
    "1016": {
        "rule_id": "1016",
        "rule_name": "Obligor Name Length Validation",
        "rule_description": "Validates that the Obligor Name field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Obligor Name\") > 255 AND \"Obligor Name\" IS NOT NULL AND \"Obligor Name\" != ''",
        "status": "active"
    },
    "1017": {
        "rule_id": "1017",
        "rule_name": "Obligor Name Carriage Return Validation",
        "rule_description": "Validates that the Obligor Name field does not contain a carriage return character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Obligor Name\", CHAR(13)) > 0 AND \"Obligor Name\" IS NOT NULL AND \"Obligor Name\" != ''",
        "status": "active"
    },
    "1018": {
        "rule_id": "1018",
        "rule_name": "Obligor Name Line Feed Validation",
        "rule_description": "Validates that the Obligor Name field does not contain a line feed character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Obligor Name\", CHAR(10)) > 0 AND \"Obligor Name\" IS NOT NULL AND \"Obligor Name\" != ''",
        "status": "active"
    },
    "1019": {
        "rule_id": "1019",
        "rule_name": "Obligor Name Comma Validation",
        "rule_description": "Validates that the Obligor Name field does not contain a comma character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Obligor Name\", ',') > 0 AND \"Obligor Name\" IS NOT NULL AND \"Obligor Name\" != ''",
        "status": "active"
    },
    "1020": {
        "rule_id": "1020",
        "rule_name": "Obligor Name Unprintable Character Validation",
        "rule_description": "Validates that the Obligor Name field does not contain any unprintable characters (ASCII 0-31)",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Obligor Name\" IS NOT NULL AND \"Obligor Name\" != '' AND LENGTH(TRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\"Obligor Name\", CHAR(0), ''), CHAR(1), ''), CHAR(2), ''), CHAR(3), ''), CHAR(4), ''), CHAR(5), ''), CHAR(6), ''), CHAR(7), ''), CHAR(8), ''), CHAR(9), ''), CHAR(11), ''), CHAR(12), ''), CHAR(14), ''), CHAR(15), ''), CHAR(16), ''), CHAR(17), ''), CHAR(18), ''), CHAR(19), ''), CHAR(20), ''), CHAR(21), ''), CHAR(22), ''), CHAR(23), ''), CHAR(24), ''), CHAR(25), ''), CHAR(26), ''), CHAR(27), ''), CHAR(28), ''), CHAR(29), ''), CHAR(30), ''), CHAR(31), ''))) != LENGTH(\"Obligor Name\")",
        "status": "active"
    },
    "1021": {
        "rule_id": "1021",
        "rule_name": "Obligor Name Individual Validation",
        "rule_description": "If the borrowing entity is an individual, the Obligor Name value must be 'Individual'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Borrowing Entity Type\" = 'Individual' AND (\"Obligor Name\" != 'Individual' OR \"Obligor Name\" IS NULL OR \"Obligor Name\" = '')",
        "status": "active"
    },
    "1022": {
        "rule_id": "1022",
        "rule_name": "City Length Validation",
        "rule_description": "Validates that the City field length is less than or equal to 255 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(City) > 255 AND City IS NOT NULL AND City != ''",
        "status": "active"
    },
    "1023": {
        "rule_id": "1023",
        "rule_name": "Country Code Length Validation",
        "rule_description": "Validates that the Country field length is exactly 2 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(Country) != 2 AND Country IS NOT NULL AND Country != ''",
        "status": "active"
    },
    "1024": {
        "rule_id": "1024",
        "rule_name": "Country Code ISO Validation",
        "rule_description": "Validates that the Country field contains a valid two-letter ISO country code.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE Country NOT IN ('US', 'CA', 'UK', 'AF', 'AL', 'DZ', 'AS', 'AD', 'AO', 'AI', 'AQ', 'AG', 'AR', 'AM', 'AW', 'AU', 'AT', 'AZ', 'BS', 'BH', 'BD', 'BB', 'BY', 'BE', 'BZ', 'BJ', 'BM', 'BT', 'BO', 'BQ', 'BA', 'BW', 'BV', 'BR', 'IO', 'BN', 'BG', 'BF', 'BI', 'CV', 'KH', 'CM', 'KY', 'CF', 'TD', 'CL', 'CN', 'CX', 'CC', 'CO', 'KM', 'CG', 'CD', 'CK', 'CR', 'CI', 'HR', 'CU', 'CW', 'CY', 'CZ', 'DK', 'DJ', 'DM', 'DO', 'EC', 'EG', 'SV', 'GQ', 'ER', 'EE', 'ET', 'FK', 'FO', 'FJ', 'FI', 'FR', 'GF', 'PF', 'TF', 'GA', 'GM', 'GE', 'DE', 'GH', 'GI', 'GR', 'GL', 'GD', 'GP', 'GU', 'GT', 'GG', 'GN', 'GW', 'GY', 'HT', 'HM', 'VA', 'HN', 'HK', 'HU', 'IS', 'IN', 'ID', 'IR', 'IQ', 'IE', 'IM', 'IL', 'IT', 'JM', 'JP', 'JE', 'JO', 'KZ', 'KE', 'KI', 'KP', 'KR', 'KW', 'KG', 'LA', 'LV', 'LB', 'LS', 'LR', 'LY', 'LI', 'LT', 'LU', 'MO', 'MK', 'MG', 'MW', 'MY', 'MV', 'ML', 'MT', 'MH', 'MQ', 'MR', 'MU', 'YT', 'MX', 'FM', 'MD', 'MC', 'MN', 'ME', 'MS', 'MA', 'MZ', 'MM', 'NA', 'NR', 'NP', 'NL', 'NC', 'NZ', 'NI', 'NE', 'NG', 'NU', 'NF', 'MP', 'NO', 'OM', 'PK', 'PW', 'PS', 'PA', 'PG', 'PY', 'PE', 'PH', 'PN', 'PL', 'PT', 'PR', 'QA', 'RE', 'RO', 'RU', 'RW', 'BL', 'SH', 'KN', 'LC', 'MF', 'PM', 'VC', 'WS', 'SM', 'ST', 'SA', 'SN', 'RS', 'SC', 'SL', 'SG', 'SX', 'SK', 'SI', 'SB', 'SO', 'ZA', 'GS', 'SS', 'ES', 'LK', 'SD', 'SR', 'SJ', 'SZ', 'SE', 'CH', 'SY', 'TW', 'TJ', 'TZ', 'TH', 'TL', 'TG', 'TK', 'TO', 'TT', 'TN', 'TR', 'TM', 'TC', 'TV', 'UG', 'UA', 'AE', 'UM', 'UY', 'UZ', 'VU', 'VE', 'VN', 'VG', 'VI', 'WF', 'EH', 'YE', 'ZM', 'ZW') AND Country IS NOT NULL AND Country != ''",
        "status": "active"
    },
    "1025": {
        "rule_id": "1025",
        "rule_name": "US ZIP Code Format Validation",
        "rule_description": "Validates that if the location is within the US, the Zip Code field is a five-digit ZIP code.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Zip Code\" IS NOT NULL AND \"Zip Code\" != '' AND substr(\"Zip Code\", 1, 1) BETWEEN '0' AND '9' AND LENGTH(\"Zip Code\") = 5 AND (\"Location\" IN ('United States', 'USA', 'US', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'Guam', 'Palau', 'Micronesia', 'Northern Marianas', 'Marshall Islands')) AND NOT (\"Zip Code\" GLOB '[0-9][0-9][0-9][0-9][0-9]')",
        "status": "active"
    },
    "1026": {
        "rule_id": "1026",
        "rule_name": "International Postal Code Format Validation",
        "rule_description": "Validates that if the location is international, the Zip Code field is a country-specific postal code.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Zip Code\" IS NOT NULL AND \"Zip Code\" != '' AND NOT (\"Location\" IN ('United States', 'USA', 'US', 'Washington DC', 'Puerto Rico', 'US Virgin Islands', 'Guam', 'Palau', 'Micronesia', 'Northern Marianas', 'Marshall Islands')) AND LENGTH(\"Zip Code\") > 0",
        "status": "active"
    },
    "1027": {
        "rule_id": "1027",
        "rule_name": "Zip Code Length Validation",
        "rule_description": "Validates that the Zip Code field length is less than or equal to 10 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Zip Code\" IS NOT NULL AND \"Zip Code\" != '' AND LENGTH(\"Zip Code\") > 10",
        "status": "active"
    },
    "1028": {
        "rule_id": "1028",
        "rule_name": "Zip Code Required Validation",
        "rule_description": "Validates that the Zip Code field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Zip Code\" IS NULL OR \"Zip Code\" = ''",
        "status": "active"
    },
    "1029": {
        "rule_id": "1029",
        "rule_name": "Industry Code Length Validation",
        "rule_description": "Validates that the Industry Code field length is between 4 and 6 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Industry Code\") NOT BETWEEN 4 AND 6 AND \"Industry Code\" IS NOT NULL AND \"Industry Code\" != ''",
        "status": "active"
    },
    "1030": {
        "rule_id": "1030",
        "rule_name": "Industry Code Numeric Validation",
        "rule_description": "Validates that the Industry Code field contains only numeric characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Industry Code\" IS NOT NULL AND \"Industry Code\" != '' AND NOT GLOB '*[!0-9]*' AND \"Industry Code\" IS NOT NULL",
        "status": "active"
    },
    "1031": {
        "rule_id": "1031",
        "rule_name": "Industry Code Type Validation",
        "rule_description": "Validates that the Industry Code field is a valid NAICS, SIC, or GICS code when NAICS is not available.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Industry Code\" IS NOT NULL AND \"Industry Code\" != '' AND \"NAICS Code\" IS NULL",
        "status": "active"
    },
    "1032": {
        "rule_id": "1032",
        "rule_name": "Obligor Internal Risk Rating Length Validation",
        "rule_description": "Validates that the Obligor Internal Risk Rating field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Obligor Internal Risk Rating\") > 255 AND \"Obligor Internal Risk Rating\" IS NOT NULL AND \"Obligor Internal Risk Rating\" != ''",
        "status": "active"
    },
    "1033": {
        "rule_id": "1033",
        "rule_name": "Stock Exchange Length Validation",
        "rule_description": "Validates that the Stock Exchange field is not longer than 255 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Stock Exchange\") > 255 AND \"Stock Exchange\" IS NOT NULL AND \"Stock Exchange\" != ''",
        "status": "active"
    },
    "1034": {
        "rule_id": "1034",
        "rule_name": "Stock Exchange 'NA' Validation",
        "rule_description": "If the borrowing entity is not publicly traded, the Stock Exchange value must be 'NA'. This query identifies violations of this rule.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Stock Exchange\" != 'NA' AND \"Stock Exchange\" IS NOT NULL AND \"Stock Exchange\" != '' AND \"Publicly Traded\" = 'No'",
        "status": "active"
    },
    "1035": {
        "rule_id": "1035",
        "rule_name": "Ticker Symbol Length Validation",
        "rule_description": "Validates that the Ticker Symbol field is not longer than 255 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Ticker Symbol\") > 255 AND \"Ticker Symbol\" IS NOT NULL AND \"Ticker Symbol\" != ''",
        "status": "active"
    },
    "1036": {
        "rule_id": "1036",
        "rule_name": "Ticker Symbol 'NA' Validation",
        "rule_description": "Validates that if the borrowing entity is not publicly traded, the Ticker Symbol field must be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Ticker Symbol\" != 'NA' AND \"Borrowing Entity Publicly Traded\" = 'No' AND \"Ticker Symbol\" IS NOT NULL AND \"Ticker Symbol\" != ''",
        "status": "active"
    },
    "1037": {
        "rule_id": "1037",
        "rule_name": "CUSIP Length Validation",
        "rule_description": "Validates that the CUSIP field is exactly 6 characters long.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(CUSIP) != 6 AND CUSIP IS NOT NULL AND CUSIP != ''",
        "status": "active"
    },
    "1038": {
        "rule_id": "1038",
        "rule_name": "CUSIP Format Validation",
        "rule_description": "Validates that the CUSIP field matches the pattern '^[A-Z0-9]{6}$' or '^NA$'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE CUSIP IS NOT NULL AND CUSIP != '' AND NOT (CUSIP GLOB '[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]' OR CUSIP = 'NA')",
        "status": "active"
    },
    "1039": {
        "rule_id": "1039",
        "rule_name": "CUSIP 'NA' Validation",
        "rule_description": "If a CUSIP does not apply, the value must be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE CUSIP IS NOT NULL AND CUSIP != '' AND CUSIP != 'NA' AND NOT (CUSIP GLOB '[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]')",
        "status": "active"
    },
    "1040": {
        "rule_id": "1040",
        "rule_name": "Internal Credit Facility ID Length Validation",
        "rule_description": "Validates that Internal Credit Facility ID field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Internal Credit Facility ID\") > 255 AND \"Internal Credit Facility ID\" IS NOT NULL AND \"Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1041": {
        "rule_id": "1041",
        "rule_name": "Internal Credit Facility ID Carriage Return Validation",
        "rule_description": "Validates that Internal Credit Facility ID field does not contain a carriage return character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Internal Credit Facility ID\", CHAR(13)) > 0 AND \"Internal Credit Facility ID\" IS NOT NULL AND \"Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1042": {
        "rule_id": "1042",
        "rule_name": "Internal Credit Facility ID Line Feed Validation",
        "rule_description": "Validates that Internal Credit Facility ID field does not contain a line feed character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Internal Credit Facility ID\", CHAR(10)) > 0 AND \"Internal Credit Facility ID\" IS NOT NULL AND \"Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1043": {
        "rule_id": "1043",
        "rule_name": "Internal Credit Facility ID Comma Validation",
        "rule_description": "Validates that Internal Credit Facility ID field does not contain a comma character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Internal Credit Facility ID\", ',') > 0 AND \"Internal Credit Facility ID\" IS NOT NULL AND \"Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1044": {
        "rule_id": "1044",
        "rule_name": "Internal Credit Facility ID Unprintable Character Validation",
        "rule_description": "Validates that Internal Credit Facility ID field does not contain any unprintable characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(TRIM(\"Internal Credit Facility ID\")) != LENGTH(\"Internal Credit Facility ID\") AND \"Internal Credit Facility ID\" IS NOT NULL AND \"Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1045": {
        "rule_id": "1045",
        "rule_name": "Internal Credit Facility ID Required Validation",
        "rule_description": "Validates that Internal Credit Facility ID field is not null or empty",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Internal Credit Facility ID\" IS NULL OR \"Internal Credit Facility ID\" = ''",
        "status": "active"
    },
    "1046": {
        "rule_id": "1046",
        "rule_name": "Internal Credit Facility ID Unique Validation",
        "rule_description": "Validates that Internal Credit Facility ID field is unique",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Internal Credit Facility ID\" IN (SELECT \"Internal Credit Facility ID\" FROM transactions GROUP BY \"Internal Credit Facility ID\" HAVING COUNT(*) > 1)",
        "status": "active"
    },
    "1047": {
        "rule_id": "1047",
        "rule_name": "Original Internal Credit Facility ID Length Validation",
        "rule_description": "Validates that Original Internal Credit Facility ID field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Original Internal Credit Facility ID\") > 255 AND \"Original Internal Credit Facility ID\" IS NOT NULL AND \"Original Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1048": {
        "rule_id": "1048",
        "rule_name": "Original Internal Credit Facility ID Carriage Return Validation",
        "rule_description": "Validates that Original Internal Credit Facility ID field does not contain a carriage return",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Original Internal Credit Facility ID\", CHAR(13)) > 0 AND \"Original Internal Credit Facility ID\" IS NOT NULL AND \"Original Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1049": {
        "rule_id": "1049",
        "rule_name": "Original Internal Credit Facility ID Line Feed Validation",
        "rule_description": "Validates that Original Internal Credit Facility ID field does not contain a line feed",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE INSTR(\"Original Internal Credit Facility ID\", CHAR(10)) > 0 AND \"Original Internal Credit Facility ID\" IS NOT NULL AND \"Original Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1050": {
        "rule_id": "1050",
        "rule_name": "Original Internal Credit Facility ID Unprintable Character Validation",
        "rule_description": "Validates that Original Internal Credit Facility ID field does not contain any unprintable characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(TRIM(\"Original Internal Credit Facility ID\")) != LENGTH(\"Original Internal Credit Facility ID\") AND \"Original Internal Credit Facility ID\" IS NOT NULL AND \"Original Internal Credit Facility ID\" != ''",
        "status": "active"
    },
    "1051": {
        "rule_id": "1051",
        "rule_name": "Origination Date Format Validation",
        "rule_description": "Validates that the Origination Date field matches the 'YYYY-MM-DD' format.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Origination Date\" IS NOT NULL AND \"Origination Date\" <> '' AND NOT GLOB '[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]' ESCAPE '\\' AND substr(\"Origination Date\", 5, 1) = '-' AND substr(\"Origination Date\", 8, 1) = '-'",
        "status": "active"
    },
    "1052": {
        "rule_id": "1052",
        "rule_name": "Origination Date Before or Equal to Period End Date",
        "rule_description": "Validates that the Origination Date is before or equal to the Period End Date.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Origination Date\" IS NOT NULL AND \"Origination Date\" <> '' AND \"Period End Date\" IS NOT NULL AND \"Period End Date\" <> '' AND \"Origination Date\" > \"Period End Date\"",
        "status": "active"
    },
    "1053": {
        "rule_id": "1053",
        "rule_name": "Origination Date Required Check",
        "rule_description": "Validates that the Origination Date field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Origination Date\" IS NULL OR \"Origination Date\" = ''",
        "status": "active"
    },
    "1054": {
        "rule_id": "1054",
        "rule_name": "Maturity Date Format Validation",
        "rule_description": "Validates that the Maturity Date field matches the 'YYYY-MM-DD' format.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Maturity Date\" IS NOT NULL AND \"Maturity Date\" != '' AND NOT GLOB '[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]' ESCAPE '\\' AND substr(\"Maturity Date\", 5, 1) = '-' AND substr(\"Maturity Date\", 8, 1) = '-'",
        "status": "active"
    },
    "1055": {
        "rule_id": "1055",
        "rule_name": "Credit Facility Type Required",
        "rule_description": "Validates that Credit Facility Type is not NULL or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Type\" IS NULL;",
        "status": "active"
    },
    "1056": {
        "rule_id": "1056",
        "rule_name": "Credit Facility Type Allowed Values",
        "rule_description": "Validates that Credit Facility Type is one of the allowed values.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Type\" NOT IN (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19) AND \"Credit Facility Type\" IS NOT NULL;",
        "status": "active"
    },
    "1057": {
        "rule_id": "1057",
        "rule_name": "Other Credit Facility Type Description Length Validation",
        "rule_description": "Validates that the 'Other Credit Facility Type Description' field length is less than or equal to 255 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Other Credit Facility Type Description\") > 255 AND \"Other Credit Facility Type Description\" IS NOT NULL",
        "status": "active"
    },
    "1058": {
        "rule_id": "1058",
        "rule_name": "Other Credit Facility Type Description Conditional Blank Validation",
        "rule_description": "Validates that if 'Credit Facility Type' is not 0, then 'Other Credit Facility Type Description' must be blank.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Type\" <> '0' AND (\"Other Credit Facility Type Description\" IS NOT NULL AND LENGTH(TRIM(\"Other Credit Facility Type Description\")) > 0)",
        "status": "active"
    },
    "1059": {
        "rule_id": "1059",
        "rule_name": "Credit Facility Purpose Required",
        "rule_description": "Validates that Credit Facility Purpose is not NULL or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Purpose\" IS NULL;",
        "status": "active"
    },
    "1060": {
        "rule_id": "1060",
        "rule_name": "Credit Facility Purpose Value Validation",
        "rule_description": "Validates that Credit Facility Purpose is one of the allowed values.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Purpose\" IS NOT NULL AND \"Credit Facility Purpose\" NOT IN (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30);",
        "status": "active"
    },
    "1061": {
        "rule_id": "1061",
        "rule_name": "Credit Facility Purpose Data Type Validation",
        "rule_description": "Validates that Credit Facility Purpose is an integer.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Purpose\" IS NOT NULL AND typeof(\"Credit Facility Purpose\") != 'integer';",
        "status": "active"
    },
    "1062": {
        "rule_id": "1062",
        "rule_name": "Other Credit Facility Purpose Description Length Validation",
        "rule_description": "Validates that the 'Other Credit Facility Purpose Description' field length is less than or equal to 255 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Other Credit Facility Purpose Description\") > 255 AND \"Other Credit Facility Purpose Description\" IS NOT NULL AND \"Other Credit Facility Purpose Description\" != ''",
        "status": "active"
    },
    "1063": {
        "rule_id": "1063",
        "rule_name": "Other Credit Facility Purpose Description Conditional Blank Validation",
        "rule_description": "Validates that if 'Credit Facility Purpose' is not 0, then 'Other Credit Facility Purpose Description' must be blank.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Purpose\" != 0 AND (\"Other Credit Facility Purpose Description\" IS NOT NULL AND \"Other Credit Facility Purpose Description\" != '')",
        "status": "active"
    },
    "1064": {
        "rule_id": "1064",
        "rule_name": "Committed Exposure Global Minimum Value",
        "rule_description": "Validates that the Committed Exposure Global field is greater than or equal to 1000000.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Committed Exposure Global\" < 1000000 AND \"Committed Exposure Global\" IS NOT NULL",
        "status": "active"
    },
    "1065": {
        "rule_id": "1065",
        "rule_name": "Utilized Exposure Global - Non-Negative Value",
        "rule_description": "Validates that the 'Utilized Exposure Global' field contains a value greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Utilized Exposure Global\" < 0 AND \"Utilized Exposure Global\" IS NOT NULL;",
        "status": "active"
    },
    "1066": {
        "rule_id": "1066",
        "rule_name": "Utilized Exposure Global - Less Than or Equal to Committed Exposure Global",
        "rule_description": "Validates that the 'Utilized Exposure Global' field contains a value less than or equal to the 'Committed Exposure Global' field.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Utilized Exposure Global\" > \"Committed Exposure Global\" AND \"Utilized Exposure Global\" IS NOT NULL AND \"Committed Exposure Global\" IS NOT NULL;",
        "status": "active"
    },
    "1067": {
        "rule_id": "1067",
        "rule_name": "Line Reported on FR Y-9C Value Validation",
        "rule_description": "Validates that the Line Reported on FR Y-9C field contains one of the allowed values.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Line Reported on FR Y-9C\" IS NOT NULL AND \"Line Reported on FR Y-9C\" NOT IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)",
        "status": "active"
    },
    "1068": {
        "rule_id": "1068",
        "rule_name": "Line of Business Length Validation",
        "rule_description": "Validates that the Line of Business field is not longer than 255 characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Line of Business\") > 255 AND \"Line of Business\" IS NOT NULL AND \"Line of Business\" != ''",
        "status": "active"
    },
    "1069": {
        "rule_id": "1069",
        "rule_name": "Line of Business Invalid Characters Validation",
        "rule_description": "Validates that the Line of Business field does not contain carriage returns, line feeds, or any unprintable characters.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Line of Business\" LIKE '%' || CHAR(10) || '%' OR \"Line of Business\" LIKE '%' || CHAR(13) || '%' OR \"Line of Business\" LIKE '%' || CHAR(9) || '%' OR \"Line of Business\" LIKE '%' || CHAR(1) || '%' OR \"Line of Business\" LIKE '%' || CHAR(2) || '%' OR \"Line of Business\" LIKE '%' || CHAR(3) || '%' OR \"Line of Business\" LIKE '%' || CHAR(4) || '%' OR \"Line of Business\" LIKE '%' || CHAR(5) || '%' OR \"Line of Business\" LIKE '%' || CHAR(6) || '%' OR \"Line of Business\" LIKE '%' || CHAR(7) || '%' OR \"Line of Business\" LIKE '%' || CHAR(8) || '%' OR \"Line of Business\" LIKE '%' || CHAR(11) || '%' OR \"Line of Business\" LIKE '%' || CHAR(12) || '%' OR \"Line of Business\" LIKE '%' || CHAR(14) || '%' OR \"Line of Business\" LIKE '%' || CHAR(15) || '%' OR \"Line of Business\" LIKE '%' || CHAR(16) || '%' OR \"Line of Business\" LIKE '%' || CHAR(17) || '%' OR \"Line of Business\" LIKE '%' || CHAR(18) || '%' OR \"Line of Business\" LIKE '%' || CHAR(19) || '%' OR \"Line of Business\" LIKE '%' || CHAR(20) || '%' OR \"Line of Business\" LIKE '%' || CHAR(21) || '%' OR \"Line of Business\" LIKE '%' || CHAR(22) || '%' OR \"Line of Business\" LIKE '%' || CHAR(23) || '%' OR \"Line of Business\" LIKE '%' || CHAR(24) || '%' OR \"Line of Business\" LIKE '%' || CHAR(25) || '%' OR \"Line of Business\" LIKE '%' || CHAR(26) || '%' OR \"Line of Business\" LIKE '%' || CHAR(27) || '%' OR \"Line of Business\" LIKE '%' || CHAR(28) || '%' OR \"Line of Business\" LIKE '%' || CHAR(29) || '%' OR \"Line of Business\" LIKE '%' || CHAR(30) || '%' OR \"Line of Business\" LIKE '%' || CHAR(31) || '%') AND \"Line of Business\" IS NOT NULL AND \"Line of Business\" != ''",
        "status": "active"
    },
    "1070": {
        "rule_id": "1070",
        "rule_name": "Line of Business Consistency with Schedule H.3",
        "rule_description": "Validates that the Line of Business value is consistent with line of business names as reported in Schedule H.3 (Line of Business Schedule), Field 1.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Line of Business\" IS NOT NULL AND \"Line of Business\" != '' AND NOT EXISTS (SELECT 1 FROM schedule_h3 WHERE schedule_h3.\"Line of Business\" = transactions.\"Line of Business\")",
        "status": "active"
    },
    "1071": {
        "rule_id": "1071",
        "rule_name": "Cumulative Charge-offs >= 0 if not Held for Sale/Fair Value",
        "rule_description": "Validates that Cumulative Charge-offs is greater than or equal to 0 if the loan is not held for sale or accounted for under a fair value option.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Cumulative Charge-offs\" IS NOT NULL AND \"Loan Held for Sale or Fair Value\" IS NOT NULL AND LOWER(\"Loan Held for Sale or Fair Value\") NOT IN ('yes', 'true', '1') AND \"Cumulative Charge-offs\" < 0;",
        "status": "active"
    },
    "1072": {
        "rule_id": "1072",
        "rule_name": "Cumulative Charge-offs is NA if Held for Sale/Fair Value",
        "rule_description": "Validates that Cumulative Charge-offs is 'NA' if the loan is held for sale or accounted for under a fair value option.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Cumulative Charge-offs\" IS NOT NULL AND \"Loan Held for Sale or Fair Value\" IS NOT NULL AND LOWER(\"Loan Held for Sale or Fair Value\") IN ('yes', 'true', '1') AND UPPER(\"Cumulative Charge-offs\") <> 'NA';",
        "status": "active"
    },
    "1073": {
        "rule_id": "1073",
        "rule_name": "Utilized Exposure Global > 0 if Cumulative Charge-offs > 0",
        "rule_description": "Validates that if Cumulative Charge-offs is greater than 0, then Utilized Exposure Global must be greater than 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Cumulative Charge-offs\" IS NOT NULL AND \"Utilized Exposure Global\" IS NOT NULL AND \"Cumulative Charge-offs\" > 0 AND \"Utilized Exposure Global\" <= 0;",
        "status": "active"
    },
    "1074": {
        "rule_id": "1074",
        "rule_name": "Cumulative Charge-offs represents cumulative charge-offs as of the date of disposition if Disposition Flag is not Active",
        "rule_description": "Validates that if Disposition Flag is not 'Active', then Cumulative Charge-offs must represent the cumulative charge-offs as of the date of disposition. This rule requires external validation as the query cannot determine if the value represents the cumulative charge-offs as of the date of disposition.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Disposition Flag\" IS NOT NULL AND LOWER(\"Disposition Flag\") <> 'active' AND \"Cumulative Charge-offs\" IS NOT NULL AND \"Cumulative Charge-offs\" >= 0;",
        "status": "active"
    },
    "1075": {
        "rule_id": "1075",
        "rule_name": "ASC 310-10 Value Greater Than or Equal to 0",
        "rule_description": "Validates that the ASC 310-10 value is greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ASC 310-10\" < 0 AND \"ASC 310-10\" IS NOT NULL;",
        "status": "active"
    },
    "1076": {
        "rule_id": "1076",
        "rule_name": "ASC 310-10 Value is 0 for Fully Undrawn Commitments",
        "rule_description": "Validates that the ASC 310-10 value is 0 for fully undrawn commitments.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ASC 310-10\" != 0 AND \"ASC 310-10\" IS NOT NULL AND \"Fully Undrawn Commitments\" = 1;",
        "status": "active"
    },
    "1077": {
        "rule_id": "1077",
        "rule_name": "ASC 310-10 Value is 0 if ASU 2016-13 Adopted",
        "rule_description": "Validates that the ASC 310-10 value is 0 if ASU 2016-13 has been adopted.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ASC 310-10\" != 0 AND \"ASC 310-10\" IS NOT NULL AND \"ASU 2016-13 Adopted\" = 1;",
        "status": "active"
    },
    "1078": {
        "rule_id": "1078",
        "rule_name": "ASC310-30 Value Greater Than or Equal to 0",
        "rule_description": "Validates that the ASC310-30 field value is greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ASC310-30\" < 0 AND \"ASC310-30\" IS NOT NULL;",
        "status": "active"
    },
    "1079": {
        "rule_id": "1079",
        "rule_name": "ASC310-30 Value is 0 for Fully Undrawn Commitments",
        "rule_description": "Validates that the ASC310-30 field value is 0 when the commitment is fully undrawn.  Requires a 'Fully Undrawn' column.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Fully Undrawn\" = 1 AND \"ASC310-30\" != 0 AND \"ASC310-30\" IS NOT NULL;",
        "status": "active"
    },
    "1080": {
        "rule_id": "1080",
        "rule_name": "ASC310-30 Value is 0 if ASU 2016-13 Adopted",
        "rule_description": "Validates that the ASC310-30 field value is 0 if ASU 2016-13 has been adopted. Requires an 'ASU 2016-13 Adopted' column.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ASU 2016-13 Adopted\" = 1 AND \"ASC310-30\" != 0 AND \"ASC310-30\" IS NOT NULL;",
        "status": "active"
    },
    "1081": {
        "rule_id": "1081",
        "rule_name": "Days Past Due Non-Negative",
        "rule_description": "Validates that the number of days principal or interest past due is greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"# Days Principal or Interest Past Due\" < 0 AND \"# Days Principal or Interest Past Due\" IS NOT NULL;",
        "status": "active"
    },
    "1082": {
        "rule_id": "1082",
        "rule_name": "Days Past Due Zero for Undrawn Commitments",
        "rule_description": "Validates that the number of days principal or interest past due is 0 for fully undrawn commitments.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"# Days Principal or Interest Past Due\" != 0 AND \"# Days Principal or Interest Past Due\" IS NOT NULL AND \"Commitment Status\" = 'Fully Undrawn';",
        "status": "active"
    },
    "1083": {
        "rule_id": "1083",
        "rule_name": "Days Past Due Zero if Not Past Due 30 Days",
        "rule_description": "Validates that the number of days principal or interest past due is 0 if payments are not past due 30 days or more.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"# Days Principal or Interest Past Due\" != 0 AND \"# Days Principal or Interest Past Due\" IS NOT NULL AND \"Days Since Last Payment\" < 30;",
        "status": "active"
    },
    "1084": {
        "rule_id": "1084",
        "rule_name": "Non-Accrual Date Format Validation",
        "rule_description": "Validates that the Non-Accrual Date field is in YYYY-MM-DD format.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Non-Accrual Date\" IS NOT NULL AND \"Non-Accrual Date\" <> '9999-12-31' AND substr(\"Non-Accrual Date\", 5, 1) != '-' AND substr(\"Non-Accrual Date\", 8, 1) != '-' AND LENGTH(\"Non-Accrual Date\") = 10;",
        "status": "active"
    },
    "1085": {
        "rule_id": "1085",
        "rule_name": "Fully Undrawn Commitments Date Validation",
        "rule_description": "For fully undrawn commitments, the Non-Accrual Date must be 9999-12-31.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Fully Undrawn\" = 1 AND \"Non-Accrual Date\" IS NOT NULL AND \"Non-Accrual Date\" <> '9999-12-31';",
        "status": "active"
    },
    "1086": {
        "rule_id": "1086",
        "rule_name": "Non-Accrual Date Default Validation",
        "rule_description": "If a non-accrual date does not exist, the Non-Accrual Date must be 9999-12-31.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Non-Accrual Date\" IS NULL;",
        "status": "active"
    },
    "1087": {
        "rule_id": "1087",
        "rule_name": "Non-Accrual Date Before Period End Date Validation",
        "rule_description": "Validates that the Non-Accrual Date is before or equal to the Period End Date.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Non-Accrual Date\" IS NOT NULL AND \"Period End Date\" IS NOT NULL AND \"Non-Accrual Date\" <> '9999-12-31' AND \"Non-Accrual Date\" > \"Period End Date\";",
        "status": "active"
    },
    "1088": {
        "rule_id": "1088",
        "rule_name": "Non-Accrual Date Required Validation",
        "rule_description": "Validates that the Non-Accrual Date is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Non-Accrual Date\" IS NULL OR \"Non-Accrual Date\" = '';",
        "status": "active"
    },
    "1089": {
        "rule_id": "1089",
        "rule_name": "Participation Flag Value Validation",
        "rule_description": "Validates that the Participation Flag field contains one of the allowed values (1, 2, 3, 4, 5).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Participation Flag\" IS NOT NULL AND \"Participation Flag\" NOT IN (1, 2, 3, 4, 5);",
        "status": "active"
    },
    "1090": {
        "rule_id": "1090",
        "rule_name": "Participation Flag Fronting Exposure Validation",
        "rule_description": "Validates that for fronting exposures, the Participation Flag value must be 1.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Participation Flag\" IS NOT NULL AND \"Fronting Exposure\" = 'Yes' AND \"Participation Flag\" != 1;",
        "status": "active"
    },
    "1091": {
        "rule_id": "1091",
        "rule_name": "Lien Position Value Validation",
        "rule_description": "Validates that Lien Position field contains one of the allowed values (1, 2, 3, 4).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lien Position\" IS NOT NULL AND \"Lien Position\" NOT IN (1, 2, 3, 4);",
        "status": "active"
    },
    "1092": {
        "rule_id": "1092",
        "rule_name": "Lien Position Required Validation",
        "rule_description": "Validates that Lien Position field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lien Position\" IS NULL;",
        "status": "active"
    },
    "1093": {
        "rule_id": "1093",
        "rule_name": "Lien Position Data Type Validation",
        "rule_description": "Validates that Lien Position field is an integer.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE typeof(\"Lien Position\") != 'integer' AND \"Lien Position\" IS NOT NULL;",
        "status": "active"
    },
    "1094": {
        "rule_id": "1094",
        "rule_name": "Security Type Allowed Values",
        "rule_description": "Validates that the Security Type field contains only allowed values (0, 1, 2, 3, 4, 5, 6).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Security Type\" IS NOT NULL AND \"Security Type\" NOT IN (0, 1, 2, 3, 4, 5, 6);",
        "status": "active"
    },
    "1095": {
        "rule_id": "1095",
        "rule_name": "Interest Rate Variability - Allowed Values",
        "rule_description": "Validates that the Interest Rate Variability field contains only allowed values (1, 2, 3, 4).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Variability\" IS NOT NULL AND \"Interest Rate Variability\" NOT IN (1, 2, 3, 4);",
        "status": "active"
    },
    "1096": {
        "rule_id": "1096",
        "rule_name": "Interest Rate Index - Valid Values",
        "rule_description": "Validates that the Interest Rate Index field contains one of the allowed values: 1, 2, 3, 4, 5, 6, 7.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Index\" IS NOT NULL AND \"Interest Rate Index\" NOT IN (1, 2, 3, 4, 5, 6, 7);",
        "status": "active"
    },
    "1097": {
        "rule_id": "1097",
        "rule_name": "Interest Rate Index - Conditional Value Check",
        "rule_description": "If Interest Rate Variability is 1 (Fixed) or 4 (Entirely fee based), Interest Rate Index must be 5 (Not applicable (Fixed or entirely fee based)).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Interest Rate Variability\" IN (1, 4) AND \"Interest Rate Index\" != 5) AND \"Interest Rate Variability\" IS NOT NULL AND \"Interest Rate Index\" IS NOT NULL;",
        "status": "active"
    },
    "1098": {
        "rule_id": "1098",
        "rule_name": "Interest Rate Index - Required Field Check",
        "rule_description": "Validates that the Interest Rate Index field is not NULL or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Index\" IS NULL;",
        "status": "active"
    },
    "1099": {
        "rule_id": "1099",
        "rule_name": "Interest Rate Spread - Variability 1 or 4",
        "rule_description": "If Interest Rate Variability is 1 (Fixed) or 4 (Entirely fee based), Interest Rate Spread value must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Variability\" IN (1, 4) AND (\"Interest Rate Spread\" IS NOT NULL AND \"Interest Rate Spread\" <> '' AND \"Interest Rate Spread\" <> 'NA')",
        "status": "active"
    },
    "1100": {
        "rule_id": "1100",
        "rule_name": "Interest Rate Spread - Variability not 1 or 4",
        "rule_description": "If Interest Rate Variability is not 1 or 4, Interest Rate Spread value must be a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Variability\" NOT IN (1, 4) AND (\"Interest Rate Spread\" IS NOT NULL AND \"Interest Rate Spread\" <> '' AND NOT (\"Interest Rate Spread\" LIKE '%.%' AND REPLACE(\"Interest Rate Spread\", '.', '') GLOB '[0-9]*')) AND \"Interest Rate Spread\" <> 'NA'",
        "status": "active"
    },
    "1101": {
        "rule_id": "1101",
        "rule_name": "Interest Rate Spread - Valid Value",
        "rule_description": "Interest Rate Spread value must be 'NA' or a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Spread\" IS NOT NULL AND \"Interest Rate Spread\" <> '' AND \"Interest Rate Spread\" <> 'NA' AND NOT (\"Interest Rate Spread\" LIKE '%.%' AND REPLACE(\"Interest Rate Spread\", '.', '') GLOB '[0-9]*')",
        "status": "active"
    },
    "1102": {
        "rule_id": "1102",
        "rule_name": "Interest Rate Spread - Required Field",
        "rule_description": "Interest Rate Spread must not be null or empty",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Spread\" IS NULL OR \"Interest Rate Spread\" = ''",
        "status": "active"
    },
    "1103": {
        "rule_id": "1103",
        "rule_name": "Interest Rate Ceiling - Variability 1 or 4",
        "rule_description": "If Interest Rate Variability is 1 (Fixed) or 4 (Entirely fee based), Interest Rate Ceiling value must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Variability\" IN ('1', '4') AND (\"Interest Rate Ceiling\" IS NOT NULL AND \"Interest Rate Ceiling\" <> '' AND UPPER(\"Interest Rate Ceiling\") <> 'NA')",
        "status": "active"
    },
    "1104": {
        "rule_id": "1104",
        "rule_name": "Interest Rate Ceiling - No Ceiling",
        "rule_description": "If there is no ceiling, Interest Rate Ceiling value must be 'NONE'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Ceiling\" IS NOT NULL AND \"Interest Rate Ceiling\" <> '' AND UPPER(\"Interest Rate Ceiling\") <> 'NONE' AND \"Interest Rate Ceiling\" LIKE '%NONE%'",
        "status": "active"
    },
    "1105": {
        "rule_id": "1105",
        "rule_name": "Interest Rate Ceiling - Variability Not 1 or 4 and Ceiling Exists",
        "rule_description": "If Interest Rate Variability is not 1 or 4 and there is a ceiling, Interest Rate Ceiling value must be a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Variability\" NOT IN ('1', '4') AND \"Interest Rate Ceiling\" IS NOT NULL AND \"Interest Rate Ceiling\" <> '' AND UPPER(\"Interest Rate Ceiling\") NOT IN ('NA', 'NONE') AND NOT (\"Interest Rate Ceiling\" GLOB '[0-9.]*') ",
        "status": "active"
    },
    "1106": {
        "rule_id": "1106",
        "rule_name": "Interest Rate Ceiling - Valid Values",
        "rule_description": "Interest Rate Ceiling value must be 'NA', 'NONE', or a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Ceiling\" IS NOT NULL AND \"Interest Rate Ceiling\" <> '' AND UPPER(\"Interest Rate Ceiling\") NOT IN ('NA', 'NONE') AND NOT (\"Interest Rate Ceiling\" GLOB '[0-9.]*')",
        "status": "active"
    },
    "1107": {
        "rule_id": "1107",
        "rule_name": "Interest Rate Ceiling - Required Field",
        "rule_description": "Interest Rate Ceiling must not be null or empty",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Ceiling\" IS NULL OR \"Interest Rate Ceiling\" = ''",
        "status": "active"
    },
    "1108": {
        "rule_id": "1108",
        "rule_name": "Interest Rate Floor - Variability Check (1 or 4)",
        "rule_description": "If Interest Rate Variability is 1 (Fixed) or 4 (Entirely fee based), Interest Rate Floor value must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Interest Rate Variability\" IN ('1', '4')) AND (COALESCE(\"Interest Rate Floor\", '') <> 'NA') AND \"Interest Rate Floor\" IS NOT NULL AND \"Interest Rate Floor\" <> ''",
        "status": "active"
    },
    "1109": {
        "rule_id": "1109",
        "rule_name": "Interest Rate Floor - No Floor Check",
        "rule_description": "If there is no floor, Interest Rate Floor value must be 'NONE'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (COALESCE(\"Interest Rate Floor\", '') <> 'NONE') AND \"Interest Rate Floor\" IS NOT NULL AND \"Interest Rate Floor\" <> '' AND NOT EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Floor Indicator' AND type = 'TEXT') UNION ALL SELECT \"Transaction ID\" FROM transactions WHERE EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Floor Indicator' AND type = 'TEXT') AND (COALESCE(\"Floor Indicator\", '') IN ('No', 'False', '0')) AND (COALESCE(\"Interest Rate Floor\", '') <> 'NONE') AND \"Interest Rate Floor\" IS NOT NULL AND \"Interest Rate Floor\" <> ''",
        "status": "active"
    },
    "1110": {
        "rule_id": "1110",
        "rule_name": "Interest Rate Floor - Variability and Decimal Check",
        "rule_description": "If Interest Rate Variability is not 1 or 4 and there is a floor, Interest Rate Floor value must be a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Interest Rate Variability\" NOT IN ('1', '4')) AND \"Interest Rate Floor\" IS NOT NULL AND \"Interest Rate Floor\" <> '' AND NOT (CAST(\"Interest Rate Floor\" AS REAL) IS NOT NULL AND \"Interest Rate Floor\" GLOB '[0-9.]*')",
        "status": "active"
    },
    "1111": {
        "rule_id": "1111",
        "rule_name": "Interest Rate Floor - Valid Values Check",
        "rule_description": "Interest Rate Floor value must be 'NA', 'NONE', or a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Rate Floor\" IS NOT NULL AND \"Interest Rate Floor\" <> '' AND \"Interest Rate Floor\" NOT IN ('NA', 'NONE') AND NOT (CAST(\"Interest Rate Floor\" AS REAL) IS NOT NULL AND \"Interest Rate Floor\" GLOB '[0-9.]*')",
        "status": "active"
    },
    "1112": {
        "rule_id": "1112",
        "rule_name": "Interest Income Tax Status - Required",
        "rule_description": "Validates that the Interest Income Tax Status field is not NULL or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Income Tax Status\" IS NULL;",
        "status": "active"
    },
    "1113": {
        "rule_id": "1113",
        "rule_name": "Interest Income Tax Status - Valid Values",
        "rule_description": "Validates that the Interest Income Tax Status field contains only allowed values (1 or 2).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Income Tax Status\" NOT IN (1, 2) AND \"Interest Income Tax Status\" IS NOT NULL;",
        "status": "active"
    },
    "1114": {
        "rule_id": "1114",
        "rule_name": "Interest Income Tax Status - Data Type",
        "rule_description": "Validates that the Interest Income Tax Status field is an integer.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE typeof(\"Interest Income Tax Status\") != 'integer' AND \"Interest Income Tax Status\" IS NOT NULL;",
        "status": "active"
    },
    "1115": {
        "rule_id": "1115",
        "rule_name": "Guarantor Flag Value Validation",
        "rule_description": "Validates that the Guarantor Flag field contains one of the allowed values (1, 2, 3, 4).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" IS NOT NULL AND \"Guarantor Flag\" NOT IN (1, 2, 3, 4);",
        "status": "active"
    },
    "1116": {
        "rule_id": "1116",
        "rule_name": "Guarantor Internal ID - Guarantor Flag 4 Validation",
        "rule_description": "If Guarantor Flag is 4 (No guarantee), Guarantor Internal ID value must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" = 4 AND (\"Guarantor Internal ID\" IS NULL OR \"Guarantor Internal ID\" != 'NA')",
        "status": "active"
    },
    "1117": {
        "rule_id": "1117",
        "rule_name": "Guarantor Internal ID - Guarantor Flag Not 4 Validation",
        "rule_description": "If Guarantor Flag is not 4, Guarantor Internal ID value must not be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" != 4 AND \"Guarantor Internal ID\" = 'NA'",
        "status": "active"
    },
    "1118": {
        "rule_id": "1118",
        "rule_name": "Guarantor Internal ID - Length Validation",
        "rule_description": "Guarantor Internal ID field length must be less than or equal to 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Guarantor Internal ID\") > 255 AND \"Guarantor Internal ID\" IS NOT NULL",
        "status": "active"
    },
    "1119": {
        "rule_id": "1119",
        "rule_name": "Guarantor Internal ID - Invalid Characters Validation",
        "rule_description": "Guarantor Internal ID field must not contain a carriage return, line feed, comma or any unprintable character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Guarantor Internal ID\" LIKE '%' || CHAR(13) || '%' OR \"Guarantor Internal ID\" LIKE '%' || CHAR(10) || '%' OR \"Guarantor Internal ID\" LIKE '%,%' OR LENGTH(TRIM(\"Guarantor Internal ID\")) != LENGTH(\"Guarantor Internal ID\")) AND \"Guarantor Internal ID\" IS NOT NULL",
        "status": "active"
    },
    "1120": {
        "rule_id": "1120",
        "rule_name": "Guarantor Name - Guarantor Flag 4 Check",
        "rule_description": "If Guarantor Flag is 4 (No guarantee), Guarantor Name must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" = 4 AND IFNULL(\"Guarantor Name\", '') <> 'NA'",
        "status": "active"
    },
    "1121": {
        "rule_id": "1121",
        "rule_name": "Guarantor Name - Guarantor Flag Not 4 Check",
        "rule_description": "If Guarantor Flag is not 4, Guarantor Name must not be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" <> 4 AND IFNULL(\"Guarantor Name\", '') = 'NA'",
        "status": "active"
    },
    "1122": {
        "rule_id": "1122",
        "rule_name": "Guarantor Name - Individual Guarantor Check",
        "rule_description": "If the guarantor is an individual, Guarantor Name must be 'Individual'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Type\" = 'Individual' AND IFNULL(\"Guarantor Name\", '') <> 'Individual'",
        "status": "active"
    },
    "1123": {
        "rule_id": "1123",
        "rule_name": "Guarantor Name - Length Validation",
        "rule_description": "Guarantor Name field length must be less than or equal to 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(IFNULL(\"Guarantor Name\", '')) > 255",
        "status": "active"
    },
    "1124": {
        "rule_id": "1124",
        "rule_name": "Guarantor Name - Invalid Characters Check",
        "rule_description": "Guarantor Name field must not contain a carriage return, line feed, comma or any unprintable character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Name\" IS NOT NULL AND (\"Guarantor Name\" LIKE '%' || CHAR(13) || '%' OR \"Guarantor Name\" LIKE '%' || CHAR(10) || '%' OR \"Guarantor Name\" LIKE '%,' || '%' OR LENGTH(TRIM(\"Guarantor Name\")) <> LENGTH(\"Guarantor Name\") )",
        "status": "active"
    },
    "1125": {
        "rule_id": "1125",
        "rule_name": "Guarantor Name - Required Field Check",
        "rule_description": "Guarantor Name field must not be null or empty",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Name\" IS NULL OR \"Guarantor Name\" = ''",
        "status": "active"
    },
    "1126": {
        "rule_id": "1126",
        "rule_name": "Guarantor TIN - Guarantor Flag 4 Validation",
        "rule_description": "If Guarantor Flag is 4 (No guarantee), Guarantor TIN value must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" = 4 AND IFNULL(\"Guarantor TIN\", '') <> 'NA' AND \"Guarantor TIN\" IS NOT NULL;",
        "status": "active"
    },
    "1127": {
        "rule_id": "1127",
        "rule_name": "Guarantor TIN - Guarantor Flag Not 4 Validation",
        "rule_description": "If Guarantor Flag is not 4, Guarantor TIN value must not be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" <> 4 AND IFNULL(\"Guarantor TIN\", '') = 'NA' AND \"Guarantor TIN\" IS NOT NULL;",
        "status": "active"
    },
    "1128": {
        "rule_id": "1128",
        "rule_name": "Guarantor TIN - Individual Guarantor Validation",
        "rule_description": "If the guarantor is an individual, Guarantor TIN value must be 'NA' (Assuming there is a column indicating if the guarantor is an individual.  Placeholder column name used: \"Guarantor Type\".  Replace with actual column name if different.)",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Type\" = 'Individual' AND IFNULL(\"Guarantor TIN\", '') <> 'NA' AND \"Guarantor TIN\" IS NOT NULL;",
        "status": "active"
    },
    "1129": {
        "rule_id": "1129",
        "rule_name": "Guarantor TIN - Format Validation",
        "rule_description": "Guarantor TIN value must match pattern '^^\\d{2}-\\d{7}$' or '^\\d{9}$' or '^NA$'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor TIN\" IS NOT NULL AND \"Guarantor TIN\" <> '' AND NOT (\"Guarantor TIN\" GLOB '[0-9][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' OR \"Guarantor TIN\" GLOB '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]' OR \"Guarantor TIN\" = 'NA');",
        "status": "active"
    },
    "1130": {
        "rule_id": "1130",
        "rule_name": "Guarantor Internal Risk Rating - NA when Guarantor Flag is 4",
        "rule_description": "Validates that if Guarantor Flag is 4 (No guarantee), Guarantor Internal Risk Rating value must be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" = 4 AND (\"Guarantor Internal Risk Rating\" IS NULL OR \"Guarantor Internal Risk Rating\" <> 'NA')",
        "status": "active"
    },
    "1131": {
        "rule_id": "1131",
        "rule_name": "Guarantor Internal Risk Rating - Not NA when Guarantor Flag is not 4",
        "rule_description": "Validates that if Guarantor Flag is not 4, Guarantor Internal Risk Rating value must not be 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Flag\" <> 4 AND \"Guarantor Internal Risk Rating\" = 'NA'",
        "status": "active"
    },
    "1132": {
        "rule_id": "1132",
        "rule_name": "Guarantor Internal Risk Rating - Length Validation",
        "rule_description": "Validates that Guarantor Internal Risk Rating field length must be less than or equal to 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Guarantor Internal Risk Rating\") > 255 AND \"Guarantor Internal Risk Rating\" IS NOT NULL",
        "status": "active"
    },
    "1133": {
        "rule_id": "1133",
        "rule_name": "Guarantor Internal Risk Rating - Required Field",
        "rule_description": "Validates that Guarantor Internal Risk Rating field is not null or empty",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Guarantor Internal Risk Rating\" IS NULL OR \"Guarantor Internal Risk Rating\" = ''",
        "status": "active"
    },
    "1134": {
        "rule_id": "1134",
        "rule_name": "Entity Internal ID vs Obligor Check",
        "rule_description": "If the entity is the same as the Obligor identified in Field 2, value must be blank",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Entity Internal ID\" IS NOT NULL AND \"Entity Internal ID\" <> '' AND \"Entity Internal ID\" = \"Obligor\" AND \"Obligor\" IS NOT NULL AND \"Obligor\" <> ''",
        "status": "active"
    },
    "1135": {
        "rule_id": "1135",
        "rule_name": "Entity Internal ID Length Validation",
        "rule_description": "Field length must be less than or equal to 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Entity Internal ID\") > 255 AND \"Entity Internal ID\" IS NOT NULL AND \"Entity Internal ID\" <> ''",
        "status": "active"
    },
    "1136": {
        "rule_id": "1136",
        "rule_name": "Entity Internal ID Invalid Characters Check",
        "rule_description": "Field must not contain a carriage return, line feed, comma or any unprintable character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Entity Internal ID\" LIKE '%' || CHAR(13) || '%' OR \"Entity Internal ID\" LIKE '%' || CHAR(10) || '%' OR \"Entity Internal ID\" LIKE '%,%' OR \"Entity Internal ID\" GLOB '*[! -~]*') AND \"Entity Internal ID\" IS NOT NULL AND \"Entity Internal ID\" <> ''",
        "status": "active"
    },
    "1137": {
        "rule_id": "1137",
        "rule_name": "Entity Name vs Obligor Validation",
        "rule_description": "If the entity is the same as the Obligor identified in Field 2, value must be blank",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Entity Name\" IS NOT NULL AND \"Entity Name\" <> '' AND \"Entity Name\" = \"Obligor\" AND \"Entity Name\" IS NOT NULL;",
        "status": "active"
    },
    "1138": {
        "rule_id": "1138",
        "rule_name": "Entity Name Individual Validation",
        "rule_description": "If the entity is an individual, value must be 'Individual'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Entity Name\" IS NOT NULL AND \"Entity Name\" <> '' AND \"Entity Name\" <> 'Individual' AND \"Entity Type\" = 'Individual';",
        "status": "active"
    },
    "1139": {
        "rule_id": "1139",
        "rule_name": "Entity Name Length Validation",
        "rule_description": "Field length must be less than or equal to 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Entity Name\") > 255 AND \"Entity Name\" IS NOT NULL;",
        "status": "active"
    },
    "1140": {
        "rule_id": "1140",
        "rule_name": "Entity Name Invalid Character Validation",
        "rule_description": "Field must not contain a carriage return, line feed, comma or any unprintable character",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Entity Name\" LIKE '%' || CHAR(13) || '%' OR \"Entity Name\" LIKE '%' || CHAR(10) || '%' OR \"Entity Name\" LIKE '%,%' OR LENGTH(TRIM(\"Entity Name\")) <> LENGTH(\"Entity Name\") OR \"Entity Name\" LIKE '%' || CHAR(0) || '%') AND \"Entity Name\" IS NOT NULL;",
        "status": "active"
    },
    "1141": {
        "rule_id": "1141",
        "rule_name": "Entity Risk Rating Blank if Same as Obligor",
        "rule_description": "If the entity is the same as the Obligor identified in Field 2, the Entity Internal Risk Rating value must be blank.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Entity Internal Risk Rating\" IS NOT NULL AND \"Entity Internal Risk Rating\" != '' AND \"Entity\" = \"Obligor Identified in Field 2\"",
        "status": "active"
    },
    "1142": {
        "rule_id": "1142",
        "rule_name": "Entity Risk Rating Length Validation",
        "rule_description": "Validates that Entity Internal Risk Rating field is not longer than 255 characters",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE LENGTH(\"Entity Internal Risk Rating\") > 255 AND \"Entity Internal Risk Rating\" IS NOT NULL",
        "status": "active"
    },
    "1143": {
        "rule_id": "1143",
        "rule_name": "Date Format Validation",
        "rule_description": "Validates that the Date of Financials field is in YYYY-MM-DD format.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Financials\" IS NOT NULL AND \"Date of Financials\" != '' AND NOT GLOB '[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]' AND substr(\"Date of Financials\", 5, 1) = '-' AND substr(\"Date of Financials\", 8, 1) = '-'",
        "status": "active"
    },
    "1144": {
        "rule_id": "1144",
        "rule_name": "Date Before or Equal to Period End Date",
        "rule_description": "Validates that the Date of Financials field is before or equal to the period end date of the data.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Financials\" IS NOT NULL AND \"Date of Financials\" != '' AND \"Period End Date\" IS NOT NULL AND \"Period End Date\" != '' AND \"Date of Financials\" > \"Period End Date\"",
        "status": "active"
    },
    "1145": {
        "rule_id": "1145",
        "rule_name": "Invalid Date Format",
        "rule_description": "Validates that the Date of Last Audit field contains a valid date.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Last Audit\" IS NOT NULL AND \"Date of Last Audit\" != '9999-12-31' AND substr(\"Date of Last Audit\", 5, 1) != '-' AND substr(\"Date of Last Audit\", 8, 1) != '-' AND length(\"Date of Last Audit\") = 10 AND NOT (CAST(substr(\"Date of Last Audit\", 1, 4) AS INTEGER) BETWEEN 1000 AND 9999 AND CAST(substr(\"Date of Last Audit\", 6, 2) AS INTEGER) BETWEEN 1 AND 12 AND CAST(substr(\"Date of Last Audit\", 9, 2) AS INTEGER) BETWEEN 1 AND 31)",
        "status": "active"
    },
    "1146": {
        "rule_id": "1146",
        "rule_name": "Date Before or Equal to Report Date",
        "rule_description": "Validates that the Date of Last Audit field is before or equal to the Report Date.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Last Audit\" IS NOT NULL AND \"Date of Last Audit\" != '9999-12-31' AND \"Report Date\" IS NOT NULL AND \"Date of Last Audit\" > \"Report Date\"",
        "status": "active"
    },
    "1147": {
        "rule_id": "1147",
        "rule_name": "Audit Date Missing Value",
        "rule_description": "Validates that if there is no audit date, the value must be 9999-12-31.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Last Audit\" IS NULL",
        "status": "active"
    },
    "1148": {
        "rule_id": "1148",
        "rule_name": "Audit Date Required",
        "rule_description": "Validates that the Date of Last Audit field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Last Audit\" IS NULL",
        "status": "active"
    },
    "1149": {
        "rule_id": "1149",
        "rule_name": "Audit Date Missing Value Check",
        "rule_description": "Validates that if there is no audit date, the value must be 9999-12-31.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Date of Last Audit\" IS NOT NULL AND \"Date of Last Audit\" != '9999-12-31' AND (SELECT COUNT(*) FROM transactions WHERE \"Date of Last Audit\" IS NULL) > 0",
        "status": "active"
    },
    "1150": {
        "rule_id": "1150",
        "rule_name": "Net Sales Current - Valid Number",
        "rule_description": "Validates that Net Sales Current is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Sales Current\" IS NOT NULL AND typeof(\"Net Sales Current\") != 'integer' AND typeof(\"Net Sales Current\") != 'real';",
        "status": "active"
    },
    "1151": {
        "rule_id": "1151",
        "rule_name": "Net Sales Current - Range Validation",
        "rule_description": "Validates that Net Sales Current is within the range of -9999999999999999999 to 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Sales Current\" IS NOT NULL AND (\"Net Sales Current\" < -9999999999999999999 OR \"Net Sales Current\" > 9999999999999999999);",
        "status": "active"
    },
    "1152": {
        "rule_id": "1152",
        "rule_name": "Net Sales Prior Year - Valid Number",
        "rule_description": "Validates that Net Sales Prior Year is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Sales Prior Year\" IS NOT NULL AND \"Net Sales Prior Year\" NOT GLOB '*[^0-9-]*' AND substr(\"Net Sales Prior Year\", 1, 1) != '-' AND replace(\"Net Sales Prior Year\", '-', '') GLOB '*[^0-9]*';",
        "status": "active"
    },
    "1153": {
        "rule_id": "1153",
        "rule_name": "Net Sales Prior Year - Range Validation",
        "rule_description": "Validates that Net Sales Prior Year is within the range of -9999999999999999999 to 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Sales Prior Year\" IS NOT NULL AND (\"Net Sales Prior Year\" < -9999999999999999999 OR \"Net Sales Prior Year\" > 9999999999999999999)",
        "status": "active"
    },
    "1154": {
        "rule_id": "1154",
        "rule_name": "Operating Income - Valid Number",
        "rule_description": "Validates that the Operating Income field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE Operating Income IS NOT NULL AND Operating Income NOT GLOB '*[^0-9-]*' AND substr(Operating Income, 1, 1) != '-' AND replace(Operating Income, '-', '') GLOB '*[^0-9]*';",
        "status": "active"
    },
    "1155": {
        "rule_id": "1155",
        "rule_name": "Operating Income - Range Validation",
        "rule_description": "Validates that the Operating Income field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE Operating Income IS NOT NULL AND (Operating Income < -9999999999999999999 OR Operating Income > 9999999999999999999)",
        "status": "active"
    },
    "1156": {
        "rule_id": "1156",
        "rule_name": "Depreciation & Amortization - Valid Number",
        "rule_description": "Validates that Depreciation & Amortization is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Depreciation & Amortization\" IS NOT NULL AND typeof(\"Depreciation & Amortization\") != 'integer' AND typeof(\"Depreciation & Amortization\") != 'real';",
        "status": "active"
    },
    "1157": {
        "rule_id": "1157",
        "rule_name": "Depreciation & Amortization - Value Range",
        "rule_description": "Validates that Depreciation & Amortization is within the range of -9999999999999999999 to 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Depreciation & Amortization\" IS NOT NULL AND (\"Depreciation & Amortization\" < -9999999999999999999 OR \"Depreciation & Amortization\" > 9999999999999999999);",
        "status": "active"
    },
    "1158": {
        "rule_id": "1158",
        "rule_name": "Interest Expense - Valid Number",
        "rule_description": "Validates that the Interest Expense field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Expense\" IS NOT NULL AND typeof(\"Interest Expense\") NOT IN ('integer', 'real')",
        "status": "active"
    },
    "1159": {
        "rule_id": "1159",
        "rule_name": "Interest Expense - Range Validation",
        "rule_description": "Validates that the Interest Expense field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Interest Expense\" IS NOT NULL AND (\"Interest Expense\" < -9999999999999999999 OR \"Interest Expense\" > 9999999999999999999)",
        "status": "active"
    },
    "1160": {
        "rule_id": "1160",
        "rule_name": "Net Income Current - Valid Number",
        "rule_description": "Validates that the Net Income Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Income Current\" IS NOT NULL AND typeof(\"Net Income Current\") != 'integer' AND typeof(\"Net Income Current\") != 'real';",
        "status": "active"
    },
    "1161": {
        "rule_id": "1161",
        "rule_name": "Net Income Current - Range Validation",
        "rule_description": "Validates that the Net Income Current field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Income Current\" IS NOT NULL AND (\"Net Income Current\" < -9999999999999999999 OR \"Net Income Current\" > 9999999999999999999);",
        "status": "active"
    },
    "1162": {
        "rule_id": "1162",
        "rule_name": "Net Income Prior Year - Valid Number",
        "rule_description": "Validates that Net Income Prior Year is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Income Prior Year\" IS NOT NULL AND typeof(\"Net Income Prior Year\") != 'integer' AND typeof(\"Net Income Prior Year\") != 'real';",
        "status": "active"
    },
    "1163": {
        "rule_id": "1163",
        "rule_name": "Net Income Prior Year - Range Validation",
        "rule_description": "Validates that Net Income Prior Year is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Net Income Prior Year\" IS NOT NULL AND (\"Net Income Prior Year\" < -9999999999999999999 OR \"Net Income Prior Year\" > 9999999999999999999);",
        "status": "active"
    },
    "1164": {
        "rule_id": "1164",
        "rule_name": "Cash & Marketable Securities - Valid Number",
        "rule_description": "Validates that the Cash & Marketable Securities field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Cash & Marketable Securities\" IS NOT NULL AND typeof(\"Cash & Marketable Securities\") != 'integer' AND typeof(\"Cash & Marketable Securities\") != 'real';",
        "status": "active"
    },
    "1165": {
        "rule_id": "1165",
        "rule_name": "Cash & Marketable Securities - Value Range",
        "rule_description": "Validates that the Cash & Marketable Securities field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Cash & Marketable Securities\" IS NOT NULL AND (\"Cash & Marketable Securities\" < -9999999999999999999 OR \"Cash & Marketable Securities\" > 9999999999999999999);",
        "status": "active"
    },
    "1166": {
        "rule_id": "1166",
        "rule_name": "A/R Current - Valid Number",
        "rule_description": "Validates that the Accounts Receivable (A/R) Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Receivable (A/R) Current\" IS NOT NULL AND typeof(\"Accounts Receivable (A/R) Current\") != 'integer' AND typeof(\"Accounts Receivable (A/R) Current\") != 'real';",
        "status": "active"
    },
    "1167": {
        "rule_id": "1167",
        "rule_name": "A/R Current - Value Range",
        "rule_description": "Validates that the Accounts Receivable (A/R) Current field is within the range of -9999999999999999999 to 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Receivable (A/R) Current\" IS NOT NULL AND (\"Accounts Receivable (A/R) Current\" < -9999999999999999999 OR \"Accounts Receivable (A/R) Current\" > 9999999999999999999);",
        "status": "active"
    },
    "1168": {
        "rule_id": "1168",
        "rule_name": "A/R Prior Year - Valid Number",
        "rule_description": "Validates that Accounts Receivable (A/R) Prior Year is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Receivable (A/R) Prior Year\" IS NOT NULL AND typeof(\"Accounts Receivable (A/R) Prior Year\") != 'integer' AND typeof(\"Accounts Receivable (A/R) Prior Year\") != 'real';",
        "status": "active"
    },
    "1169": {
        "rule_id": "1169",
        "rule_name": "A/R Prior Year - Value Range",
        "rule_description": "Validates that Accounts Receivable (A/R) Prior Year is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Receivable (A/R) Prior Year\" IS NOT NULL AND (\"Accounts Receivable (A/R) Prior Year\" < -9999999999999999999 OR \"Accounts Receivable (A/R) Prior Year\" > 9999999999999999999);",
        "status": "active"
    },
    "1170": {
        "rule_id": "1170",
        "rule_name": "Inventory Current - Valid Number",
        "rule_description": "Validates that the Inventory Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Inventory Current\" IS NOT NULL AND NOT GLOB('*[^0-9]*', \"Inventory Current\")",
        "status": "active"
    },
    "1171": {
        "rule_id": "1171",
        "rule_name": "Inventory Current - Value Range",
        "rule_description": "Validates that the Inventory Current field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Inventory Current\" IS NOT NULL AND (\"Inventory Current\" < -9999999999999999999 OR \"Inventory Current\" > 9999999999999999999)",
        "status": "active"
    },
    "1172": {
        "rule_id": "1172",
        "rule_name": "Inventory Prior Year - Valid Number",
        "rule_description": "Validates that Inventory Prior Year is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Inventory Prior Year\" IS NOT NULL AND typeof(\"Inventory Prior Year\") NOT IN ('integer', 'real')",
        "status": "active"
    },
    "1173": {
        "rule_id": "1173",
        "rule_name": "Inventory Prior Year - Range Validation",
        "rule_description": "Validates that Inventory Prior Year is within the range of -9999999999999999999 and 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Inventory Prior Year\" IS NOT NULL AND (\"Inventory Prior Year\" < -9999999999999999999 OR \"Inventory Prior Year\" > 9999999999999999999)",
        "status": "active"
    },
    "1174": {
        "rule_id": "1174",
        "rule_name": "Current Assets Current - Valid Number",
        "rule_description": "Validates that the Current Assets Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Assets Current\" IS NOT NULL AND typeof(\"Current Assets Current\") != 'integer' AND typeof(\"Current Assets Current\") != 'real';",
        "status": "active"
    },
    "1175": {
        "rule_id": "1175",
        "rule_name": "Current Assets Current - Value Range",
        "rule_description": "Validates that the Current Assets Current field is within the range of -9999999999999999999 to 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Assets Current\" IS NOT NULL AND (\"Current Assets Current\" < -9999999999999999999 OR \"Current Assets Current\" > 9999999999999999999);",
        "status": "active"
    },
    "1176": {
        "rule_id": "1176",
        "rule_name": "Current Assets Prior Year - Valid Number",
        "rule_description": "Validates that Current Assets Prior Year is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Assets Prior Year\" IS NOT NULL AND NOT (\"Current Assets Prior Year\" GLOB '*[^0-9.-]*' AND \"Current Assets Prior Year\" NOT GLOB '*-*' AND \"Current Assets Prior Year\" NOT GLOB '*.*')",
        "status": "active"
    },
    "1177": {
        "rule_id": "1177",
        "rule_name": "Current Assets Prior Year - Value Range",
        "rule_description": "Validates that Current Assets Prior Year is within the range of -9999999999999999999 to 9999999999999999999.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Assets Prior Year\" IS NOT NULL AND (\"Current Assets Prior Year\" < -9999999999999999999 OR \"Current Assets Prior Year\" > 9999999999999999999)",
        "status": "active"
    },
    "1178": {
        "rule_id": "1178",
        "rule_name": "Tangible Assets - Valid Number",
        "rule_description": "Validates that the Tangible Assets field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Tangible Assets\" IS NOT NULL AND typeof(\"Tangible Assets\") != 'integer' AND typeof(\"Tangible Assets\") != 'real';",
        "status": "active"
    },
    "1179": {
        "rule_id": "1179",
        "rule_name": "Tangible Assets - Range Validation",
        "rule_description": "Validates that the Tangible Assets field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Tangible Assets\" IS NOT NULL AND (\"Tangible Assets\" < -9999999999999999999 OR \"Tangible Assets\" > 9999999999999999999);",
        "status": "active"
    },
    "1180": {
        "rule_id": "1180",
        "rule_name": "Fixed Assets - Valid Number",
        "rule_description": "Validates that the Fixed Assets field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Fixed Assets\" IS NOT NULL AND typeof(\"Fixed Assets\") != 'integer' AND typeof(\"Fixed Assets\") != 'real';",
        "status": "active"
    },
    "1181": {
        "rule_id": "1181",
        "rule_name": "Fixed Assets - Range Validation",
        "rule_description": "Validates that the Fixed Assets field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Fixed Assets\" IS NOT NULL AND (\"Fixed Assets\" < -9999999999999999999 OR \"Fixed Assets\" > 9999999999999999999);",
        "status": "active"
    },
    "1182": {
        "rule_id": "1182",
        "rule_name": "TA Current - Valid Number",
        "rule_description": "Validates that the Total Assets (TA) Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"TA Current\" IS NOT NULL AND NOT (typeof(\"TA Current\") = 'integer' OR typeof(\"TA Current\") = 'real') AND \"TA Current\" != ''",
        "status": "active"
    },
    "1183": {
        "rule_id": "1183",
        "rule_name": "TA Current - Value Range",
        "rule_description": "Validates that the Total Assets (TA) Current field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"TA Current\" IS NOT NULL AND (\"TA Current\" < -9999999999999999999 OR \"TA Current\" > 9999999999999999999) AND \"TA Current\" != ''",
        "status": "active"
    },
    "1184": {
        "rule_id": "1184",
        "rule_name": "TA Prior Year - Valid Number",
        "rule_description": "Validates that Total Assets (TA) Prior Year is a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"TA Prior Year\" IS NOT NULL AND typeof(\"TA Prior Year\") NOT IN ('integer', 'real')",
        "status": "active"
    },
    "1185": {
        "rule_id": "1185",
        "rule_name": "TA Prior Year - Range Validation",
        "rule_description": "Validates that Total Assets (TA) Prior Year is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"TA Prior Year\" IS NOT NULL AND (\"TA Prior Year\" < -9999999999999999999 OR \"TA Prior Year\" > 9999999999999999999)",
        "status": "active"
    },
    "1186": {
        "rule_id": "1186",
        "rule_name": "A/P Current - Valid Number",
        "rule_description": "Validates that the Accounts Payable (A/P) Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Payable (A/P) Current\" IS NOT NULL AND NOT GLOB '*[!0-9]*' ESCAPE '*' AND \"Accounts Payable (A/P) Current\" != '' AND CAST(\"Accounts Payable (A/P) Current\" AS REAL) IS NULL",
        "status": "active"
    },
    "1187": {
        "rule_id": "1187",
        "rule_name": "A/P Current - Range Validation",
        "rule_description": "Validates that the Accounts Payable (A/P) Current field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Payable (A/P) Current\" IS NOT NULL AND \"Accounts Payable (A/P) Current\" != '' AND (CAST(\"Accounts Payable (A/P) Current\" AS REAL) < -9999999999999999999 OR CAST(\"Accounts Payable (A/P) Current\" AS REAL) > 9999999999999999999)",
        "status": "active"
    },
    "1188": {
        "rule_id": "1188",
        "rule_name": "A/P Prior Year - Valid Number",
        "rule_description": "Validates that the A/P Prior Year field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Payable (A/P) Prior Year\" IS NOT NULL AND typeof(\"Accounts Payable (A/P) Prior Year\") != 'integer' AND typeof(\"Accounts Payable (A/P) Prior Year\") != 'real'",
        "status": "active"
    },
    "1189": {
        "rule_id": "1189",
        "rule_name": "A/P Prior Year - Value Range",
        "rule_description": "Validates that the A/P Prior Year field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Payable (A/P) Prior Year\" IS NOT NULL AND (\"Accounts Payable (A/P) Prior Year\" < -9999999999999999999 OR \"Accounts Payable (A/P) Prior Year\" > 9999999999999999999)",
        "status": "active"
    },
    "1190": {
        "rule_id": "1190",
        "rule_name": "A/P Prior Year - Required Field",
        "rule_description": "Validates that the A/P Prior Year field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Accounts Payable (A/P) Prior Year\" IS NULL",
        "status": "active"
    },
    "1191": {
        "rule_id": "1191",
        "rule_name": "Short Term Debt - Valid Number",
        "rule_description": "Validates that the Short Term Debt field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Short Term Debt\" IS NOT NULL AND typeof(\"Short Term Debt\") != 'integer' AND typeof(\"Short Term Debt\") != 'real'",
        "status": "active"
    },
    "1192": {
        "rule_id": "1192",
        "rule_name": "Short Term Debt - Range Validation",
        "rule_description": "Validates that the Short Term Debt field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Short Term Debt\" IS NOT NULL AND (\"Short Term Debt\" < -9999999999999999999 OR \"Short Term Debt\" > 9999999999999999999)",
        "status": "active"
    },
    "1193": {
        "rule_id": "1193",
        "rule_name": "Current Maturities of Long Term Debt - Valid Number",
        "rule_description": "Validates that the Current Maturities of Long Term Debt field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Maturities of Long Term Debt\" IS NOT NULL AND typeof(\"Current Maturities of Long Term Debt\") != 'integer' AND typeof(\"Current Maturities of Long Term Debt\") != 'real';",
        "status": "active"
    },
    "1194": {
        "rule_id": "1194",
        "rule_name": "Current Maturities of Long Term Debt - Value Range",
        "rule_description": "Validates that the Current Maturities of Long Term Debt field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Maturities of Long Term Debt\" IS NOT NULL AND (\"Current Maturities of Long Term Debt\" < -9999999999999999999 OR \"Current Maturities of Long Term Debt\" > 9999999999999999999);",
        "status": "active"
    },
    "1195": {
        "rule_id": "1195",
        "rule_name": "Current Liabilities Current - Valid Number",
        "rule_description": "Validates that the Current Liabilities Current field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Liabilities Current\" IS NOT NULL AND typeof(\"Current Liabilities Current\") != 'integer' AND typeof(\"Current Liabilities Current\") != 'real'",
        "status": "active"
    },
    "1196": {
        "rule_id": "1196",
        "rule_name": "Current Liabilities Current - Value Range",
        "rule_description": "Validates that the Current Liabilities Current field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Liabilities Current\" IS NOT NULL AND (\"Current Liabilities Current\" < -9999999999999999999 OR \"Current Liabilities Current\" > 9999999999999999999)",
        "status": "active"
    },
    "1197": {
        "rule_id": "1197",
        "rule_name": "Current Liabilities Prior Year - Valid Number",
        "rule_description": "Validates that the Current Liabilities Prior Year field contains a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Liabilities Prior Year\" IS NOT NULL AND typeof(\"Current Liabilities Prior Year\") NOT IN ('integer', 'real')",
        "status": "active"
    },
    "1198": {
        "rule_id": "1198",
        "rule_name": "Current Liabilities Prior Year - Range Validation",
        "rule_description": "Validates that the Current Liabilities Prior Year field is within the specified range.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Liabilities Prior Year\" IS NOT NULL AND (\"Current Liabilities Prior Year\" < -9999999999999999999 OR \"Current Liabilities Prior Year\" > 9999999999999999999)",
        "status": "active"
    },
    "1199": {
        "rule_id": "1199",
        "rule_name": "Minority Interest >= 0 or NA",
        "rule_description": "Validates that the Minority Interest field is either 'NA' or a number greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Minority Interest\" <> 'NA' AND CAST(\"Minority Interest\" AS REAL) < 0 AND \"Minority Interest\" IS NOT NULL AND \"Minority Interest\" <> ''",
        "status": "active"
    },
    "1200": {
        "rule_id": "1200",
        "rule_name": "Minority Interest is NA or Valid Number",
        "rule_description": "Validates that the Minority Interest field is either 'NA' or a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Minority Interest\" IS NOT NULL AND \"Minority Interest\" <> '' AND \"Minority Interest\" <> 'NA' AND NOT (typeof(\"Minority Interest\") = 'integer' OR typeof(\"Minority Interest\") = 'real' AND \"Minority Interest\" GLOB '[0-9]*')",
        "status": "active"
    },
    "1201": {
        "rule_id": "1201",
        "rule_name": "Minority Interest Populated if EntityInternalID is not NULL",
        "rule_description": "Validates that if EntityInternalID is not NULL, then Minority Interest must be populated with a valid number or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"EntityInternalID\" IS NOT NULL AND (\"Minority Interest\" IS NULL OR \"Minority Interest\" = '')",
        "status": "active"
    },
    "1202": {
        "rule_id": "1202",
        "rule_name": "Minority Interest Populated if EntityInternalID is not NULL - NA or Number",
        "rule_description": "Validates that if EntityInternalID is not NULL, then Minority Interest must be populated with a valid number or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"EntityInternalID\" IS NOT NULL AND \"Minority Interest\" IS NOT NULL AND \"Minority Interest\" <> '' AND \"Minority Interest\" <> 'NA' AND NOT (typeof(\"Minority Interest\") = 'integer' OR typeof(\"Minority Interest\") = 'real' AND \"Minority Interest\" GLOB '[0-9]*')",
        "status": "active"
    },
    "1203": {
        "rule_id": "1203",
        "rule_name": "Total Liabilities Greater Than or Equal to 0",
        "rule_description": "Validates that the Total Liabilities field is greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Total Liabilities\" < 0 AND \"Total Liabilities\" IS NOT NULL;",
        "status": "active"
    },
    "1204": {
        "rule_id": "1204",
        "rule_name": "Total Liabilities Populated When EntityInternalID is Not NULL",
        "rule_description": "Validates that if EntityInternalID is not NULL, then Total Liabilities must be populated with a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"EntityInternalID\" IS NOT NULL AND (\"Total Liabilities\" IS NULL OR \"Total Liabilities\" = '') AND \"Total Liabilities\" IS NOT 0;",
        "status": "active"
    },
    "1205": {
        "rule_id": "1205",
        "rule_name": "Retained Earnings Populated When EntityInternalID is Not Null",
        "rule_description": "If EntityInternalID is not NULL, then the Retained Earnings field must be populated with a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"EntityInternalID\" IS NOT NULL AND (\"Retained Earnings\" IS NULL OR \"Retained Earnings\" = '')",
        "status": "active"
    },
    "1206": {
        "rule_id": "1206",
        "rule_name": "Capital Expenditures Populated When EntityInternalID is Not NULL",
        "rule_description": "If EntityInternalID is not NULL, then the Capital Expenditures field must be populated with a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"EntityInternalID\" IS NOT NULL AND (\"Capital Expenditures\" IS NULL OR \"Capital Expenditures\" = '')",
        "status": "active"
    },
    "1207": {
        "rule_id": "1207",
        "rule_name": "Special Purpose Entity Flag Value Validation",
        "rule_description": "Validates that the Special Purpose Entity Flag field contains only the values 1 or 2.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Special Purpose Entity Flag\" IS NOT NULL AND \"Special Purpose Entity Flag\" NOT IN (1, 2);",
        "status": "active"
    },
    "1208": {
        "rule_id": "1208",
        "rule_name": "Lower of Cost or Market Flag Value Validation",
        "rule_description": "Validates that the Lower of Cost or Market Flag field contains only the values 1, 2, or 3.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lower of Cost or Market Flag\" IS NOT NULL AND \"Lower of Cost or Market Flag\" NOT IN (1, 2, 3);",
        "status": "active"
    },
    "1209": {
        "rule_id": "1209",
        "rule_name": "Lower of Cost or Market Flag LOCOM Validation",
        "rule_description": "Validates that the Lower of Cost or Market Flag field value 1 represents LOCOM.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lower of Cost or Market Flag\" = 1 AND \"Lower of Cost or Market Flag\" IS NOT NULL;",
        "status": "active"
    },
    "1210": {
        "rule_id": "1210",
        "rule_name": "Lower of Cost or Market Flag FVO Validation",
        "rule_description": "Validates that the Lower of Cost or Market Flag field value 2 represents FVO.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lower of Cost or Market Flag\" = 2 AND \"Lower of Cost or Market Flag\" IS NOT NULL;",
        "status": "active"
    },
    "1211": {
        "rule_id": "1211",
        "rule_name": "Lower of Cost or Market Flag NA Validation",
        "rule_description": "Validates that the Lower of Cost or Market Flag field value 3 represents NA.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lower of Cost or Market Flag\" = 3 AND \"Lower of Cost or Market Flag\" IS NOT NULL;",
        "status": "active"
    },
    "1212": {
        "rule_id": "1212",
        "rule_name": "Lower of Cost or Market Flag Required Validation",
        "rule_description": "Validates that the Lower of Cost or Market Flag field is not null.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Lower of Cost or Market Flag\" IS NULL;",
        "status": "active"
    },
    "1213": {
        "rule_id": "1213",
        "rule_name": "SNC Internal Credit ID - NA if ParticipationFlag not 4 or 5",
        "rule_description": "Value must be 'NA' if ParticipationFlag is not 4 or 5",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ParticipationFlag\" NOT IN (4, 5) AND \"SNC Internal Credit ID\" <> 'NA' AND \"SNC Internal Credit ID\" IS NOT NULL",
        "status": "active"
    },
    "1214": {
        "rule_id": "1214",
        "rule_name": "SNC Internal Credit ID - Not NA if ParticipationFlag 4 or 5 and Agent",
        "rule_description": "Value must not be 'NA' if ParticipationFlag is 4 or 5 and the reporting entity is the agent",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ParticipationFlag\" IN (4, 5) AND \"Reporting Entity\" = 'Agent' AND (\"SNC Internal Credit ID\" = 'NA' OR \"SNC Internal Credit ID\" IS NULL)",
        "status": "active"
    },
    "1215": {
        "rule_id": "1215",
        "rule_name": "SNC Internal Credit ID - No Control Characters",
        "rule_description": "Must not contain a carriage return, line feed, comma or any unprintable character.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"SNC Internal Credit ID\" LIKE '%' || char(13) || '%' OR \"SNC Internal Credit ID\" LIKE '%' || char(10) || '%' OR \"SNC Internal Credit ID\" LIKE '%,%' OR LENGTH(TRIM(\"SNC Internal Credit ID\")) <> LENGTH(\"SNC Internal Credit ID\") OR \"SNC Internal Credit ID\" GLOB '*[! -~]*') AND \"SNC Internal Credit ID\" IS NOT NULL",
        "status": "active"
    },
    "1216": {
        "rule_id": "1216",
        "rule_name": "PD Value Range Validation",
        "rule_description": "Validates that Probability of Default (PD) is between 0 and 1 if not 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Probability of Default (PD)\" != 'NA' AND CAST(\"Probability of Default (PD)\" AS REAL) NOT BETWEEN 0 AND 1 AND \"Probability of Default (PD)\" IS NOT NULL;",
        "status": "active"
    },
    "1217": {
        "rule_id": "1217",
        "rule_name": "PD Format Validation",
        "rule_description": "Validates that Probability of Default (PD) is 'NA' or a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Probability of Default (PD)\" IS NOT NULL AND \"Probability of Default (PD)\" != 'NA' AND NOT (typeof(\"Probability of Default (PD)\") = 'real' OR typeof(\"Probability of Default (PD)\") = 'integer') AND NOT (CAST(\"Probability of Default (PD)\" AS REAL) IS NOT NULL);",
        "status": "active"
    },
    "1218": {
        "rule_id": "1218",
        "rule_name": "PD Required If InternalRating Exists",
        "rule_description": "Validates that Probability of Default (PD) is populated if InternalRating is not NULL",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"InternalRating\" IS NOT NULL AND (\"Probability of Default (PD)\" IS NULL OR \"Probability of Default (PD)\" = '');",
        "status": "active"
    },
    "1219": {
        "rule_id": "1219",
        "rule_name": "PD Required If InternalRating Exists - NA Check",
        "rule_description": "Validates that Probability of Default (PD) is populated with a valid number or 'NA' if InternalRating is not NULL",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"InternalRating\" IS NOT NULL AND \"Probability of Default (PD)\" IS NOT NULL AND \"Probability of Default (PD)\" != 'NA' AND CAST(\"Probability of Default (PD)\" AS REAL) IS NULL;",
        "status": "active"
    },
    "1220": {
        "rule_id": "1220",
        "rule_name": "Loss Given Default Range Validation",
        "rule_description": "Validates that Loss Given Default is between 0 and 1 if not 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Loss Given Default\" != 'NA' AND CAST(\"Loss Given Default\" AS REAL) NOT BETWEEN 0 AND 1 AND \"Loss Given Default\" IS NOT NULL AND \"Loss Given Default\" != ''",
        "status": "active"
    },
    "1221": {
        "rule_id": "1221",
        "rule_name": "Loss Given Default Format Validation",
        "rule_description": "Validates that Loss Given Default is 'NA' or a valid decimal",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Loss Given Default\" IS NOT NULL AND \"Loss Given Default\" != '' AND \"Loss Given Default\" != 'NA' AND NOT (typeof(CAST(\"Loss Given Default\" AS REAL)) = 'real' AND \"Loss Given Default\" LIKE '%.____')",
        "status": "active"
    },
    "1222": {
        "rule_id": "1222",
        "rule_name": "Loss Given Default Conditional Validation",
        "rule_description": "If InternalRating is not NULL, then Loss Given Default must be populated with a valid number or 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"InternalRating\" IS NOT NULL AND (\"Loss Given Default\" IS NULL OR \"Loss Given Default\" = '')",
        "status": "active"
    },
    "1223": {
        "rule_id": "1223",
        "rule_name": "Loss Given Default Conditional Validation 2",
        "rule_description": "If InternalRating is not NULL, then Loss Given Default must be populated with a valid number or 'NA'",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"InternalRating\" IS NOT NULL AND \"Loss Given Default\" IS NOT NULL AND \"Loss Given Default\" != '' AND \"Loss Given Default\" != 'NA' AND NOT (typeof(CAST(\"Loss Given Default\" AS REAL)) = 'real' AND \"Loss Given Default\" LIKE '%.____')",
        "status": "active"
    },
    "1224": {
        "rule_id": "1224",
        "rule_name": "Exposure At Default Non-Negative Check",
        "rule_description": "Validates that Exposure At Default is greater than or equal to 0 if not 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Exposure At Default\" <> 'NA' AND CAST(\"Exposure At Default\" AS REAL) < 0 AND \"Exposure At Default\" IS NOT NULL AND \"Exposure At Default\" <> ''",
        "status": "active"
    },
    "1225": {
        "rule_id": "1225",
        "rule_name": "Exposure At Default Valid Number or NA Check",
        "rule_description": "Validates that Exposure At Default is 'NA' or a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Exposure At Default\" IS NOT NULL AND \"Exposure At Default\" <> '' AND \"Exposure At Default\" <> 'NA' AND NOT (typeof(CAST(\"Exposure At Default\" AS REAL)) = 'real' OR typeof(CAST(\"Exposure At Default\" AS REAL)) = 'integer')",
        "status": "active"
    },
    "1226": {
        "rule_id": "1226",
        "rule_name": "Exposure At Default Conditional Population Check",
        "rule_description": "If InternalRating is not NULL, then Exposure At Default must be populated with a valid number or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"InternalRating\" IS NOT NULL AND (\"Exposure At Default\" IS NULL OR \"Exposure At Default\" = '' OR (\"Exposure At Default\" <> 'NA' AND NOT (typeof(CAST(\"Exposure At Default\" AS REAL)) = 'real' OR typeof(CAST(\"Exposure At Default\" AS REAL)) = 'integer')))",
        "status": "active"
    },
    "1227": {
        "rule_id": "1227",
        "rule_name": "Renewal Date Format Validation",
        "rule_description": "Validates that the Renewal Date field is in YYYY-MM-DD format.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Renewal Date\" IS NOT NULL AND \"Renewal Date\" NOT LIKE '____-__-__' AND \"Renewal Date\" <> ''",
        "status": "active"
    },
    "1228": {
        "rule_id": "1228",
        "rule_name": "Renewal Date Default Value Validation",
        "rule_description": "Validates that the Renewal Date field is 9999-12-31 if the credit facility has not been renewed.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Renewal Date\" IS NOT NULL AND \"Renewal Date\" <> '' AND \"Renewal Date\" <> '9999-12-31' AND /* Add condition here to check if credit facility has not been renewed */ 1=1",
        "status": "active"
    },
    "1229": {
        "rule_id": "1229",
        "rule_name": "Renewal Date Less Than or Equal to Report Date Validation",
        "rule_description": "Validates that the Renewal Date field is less than or equal to the report date.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Renewal Date\" IS NOT NULL AND \"Renewal Date\" <> '' AND \"Renewal Date\" > (SELECT MAX(\"Report Date\") FROM transactions)",
        "status": "active"
    },
    "1230": {
        "rule_id": "1230",
        "rule_name": "Renewal Date Required Validation",
        "rule_description": "Validates that the Renewal Date field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Renewal Date\" IS NULL OR \"Renewal Date\" = ''",
        "status": "active"
    },
    "1231": {
        "rule_id": "1231",
        "rule_name": "Credit Facility Currency - Valid ISO 4217 Code",
        "rule_description": "Validates that the Credit Facility Currency field contains a valid ISO 4217 currency code.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Currency\" IS NOT NULL AND \"Credit Facility Currency\" != '' AND \"Credit Facility Currency\" NOT IN ('USD', 'EUR', 'GBP', 'JPY', 'CAD', 'AUD', 'CHF', 'CNY', 'SEK', 'NZD', 'MXN', 'SGD', 'HKD', 'NOK', 'KRW', 'TRY', 'RUB', 'INR', 'BRL', 'ZAR') COLLATE NOCASE",
        "status": "active"
    },
    "1232": {
        "rule_id": "1232",
        "rule_name": "Credit Facility Currency - Not NULL",
        "rule_description": "Validates that the Credit Facility Currency field is not NULL.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Credit Facility Currency\" IS NULL OR \"Credit Facility Currency\" = ''",
        "status": "active"
    },
    "1233": {
        "rule_id": "1233",
        "rule_name": "Collateral Market Value Non-Negative",
        "rule_description": "Validates that Collateral Market Value is greater than or equal to 0 if not 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Collateral Market Value\" != 'NA' AND CAST(\"Collateral Market Value\" AS REAL) < 0 AND \"Collateral Market Value\" IS NOT NULL AND \"Collateral Market Value\" != ''",
        "status": "active"
    },
    "1234": {
        "rule_id": "1234",
        "rule_name": "Collateral Market Value Valid Number or NA",
        "rule_description": "Validates that Collateral Market Value is 'NA' or a valid number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Collateral Market Value\" IS NOT NULL AND \"Collateral Market Value\" != '' AND \"Collateral Market Value\" != 'NA' AND NOT (typeof(\"Collateral Market Value\") = 'integer' OR typeof(\"Collateral Market Value\") = 'real' AND \"Collateral Market Value\" GLOB '[0-9]*')",
        "status": "active"
    },
    "1235": {
        "rule_id": "1235",
        "rule_name": "Collateral Market Value Required for Secured Transactions",
        "rule_description": "Validates that if SecurityType is not 6 (Unsecured), then Collateral Market Value must be populated with a valid number or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"SecurityType\" != 6 AND (\"Collateral Market Value\" IS NULL OR \"Collateral Market Value\" = '')",
        "status": "active"
    },
    "1236": {
        "rule_id": "1236",
        "rule_name": "Collateral Market Value Required for Secured Transactions - NA or Number",
        "rule_description": "Validates that if SecurityType is not 6 (Unsecured), then Collateral Market Value must be populated with a valid number or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"SecurityType\" != 6 AND NOT (\"Collateral Market Value\" = 'NA' OR (typeof(\"Collateral Market Value\") = 'integer' OR typeof(\"Collateral Market Value\") = 'real' AND \"Collateral Market Value\" GLOB '[0-9]*')) AND \"Collateral Market Value\" IS NOT NULL AND \"Collateral Market Value\" != ''",
        "status": "active"
    },
    "1237": {
        "rule_id": "1237",
        "rule_name": "Prepayment Penalty Flag Value Validation",
        "rule_description": "Validates that the Prepayment Penalty Flag field contains only the values 1, 2, or 3.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Prepayment Penalty Flag\" IS NOT NULL AND \"Prepayment Penalty Flag\" NOT IN (1, 2, 3);",
        "status": "active"
    },
    "1238": {
        "rule_id": "1238",
        "rule_name": "Prepayment Penalty Flag - 1 = Yes",
        "rule_description": "This rule is descriptive and doesn't require a SQL validation query as it describes the meaning of the value 1.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE 1=0;",
        "status": "Active",
        "id": "1238",
        "name": "Prepayment Penalty Flag - 1 = Yes",
        "description": "This rule is descriptive and doesn't require a SQL validation query as it describes the meaning of the value 1."
    },
    "1239": {
        "rule_id": "1239",
        "rule_name": "Prepayment Penalty Flag - 2 = Expired",
        "rule_description": "This rule is descriptive and doesn't require a SQL validation query as it describes the meaning of the value 2.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE 1=0;",
        "status": "inactive"
    },
    "1241": {
        "rule_id": "1241",
        "rule_name": "Prepayment Penalty Flag Required Check",
        "rule_description": "Validates that the Prepayment Penalty Flag field is not NULL.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Prepayment Penalty Flag\" IS NULL;",
        "status": "active"
    },
    "1242": {
        "rule_id": "1242",
        "rule_name": "Entity Industry Code Required if EntityName is not NULL",
        "rule_description": "If EntityName is not NULL, then Entity Industry Code must be populated with a valid 4 to 6 digit number.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE EntityName IS NOT NULL AND (EntityIndustryCode IS NULL OR EntityIndustryCode = '')",
        "status": "active"
    },
    "1243": {
        "rule_id": "1243",
        "rule_name": "Entity Industry Code Format Validation",
        "rule_description": "Entity Industry Code must be a valid 4 to 6 digit number if populated.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE EntityIndustryCode IS NOT NULL AND EntityIndustryCode != '' AND (LENGTH(EntityIndustryCode) < 4 OR LENGTH(EntityIndustryCode) > 6 OR NOT (EntityIndustryCode GLOB '[0-9][0-9][0-9][0-9][0-9][0-9]*'))",
        "status": "active"
    },
    "1244": {
        "rule_id": "1244",
        "rule_name": "Entity Industry Code Value Validation",
        "rule_description": "Value must be a valid NAICS, SIC, or GICS code.  This query only checks for numeric format and length.  A separate process is required to validate against a list of valid codes.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE EntityIndustryCode IS NOT NULL AND EntityIndustryCode != '' AND (LENGTH(EntityIndustryCode) >= 4 AND LENGTH(EntityIndustryCode) <= 6 AND (NOT (EntityIndustryCode GLOB '[0-9][0-9][0-9][0-9][0-9][0-9]*')))",
        "status": "active"
    },
    "1245": {
        "rule_id": "1245",
        "rule_name": "Participation Interest Range Validation",
        "rule_description": "Validates that Participation Interest is between 0 and 1 when Syndicated Loan Flag is not 1, 2, or 3.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Syndicated Loan Flag\" NOT IN ('1', '2', '3') AND \"Participation Interest\" NOT IN ('NA', 'N/A') AND CAST(\"Participation Interest\" AS REAL) NOT BETWEEN 0 AND 1 AND \"Participation Interest\" IS NOT NULL AND \"Participation Interest\" != ''",
        "status": "active"
    },
    "1246": {
        "rule_id": "1246",
        "rule_name": "Participation Interest Value Validation",
        "rule_description": "Validates that Participation Interest is 1 when ParticipationFlag is 1 (No).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ParticipationFlag\" = '1' AND \"Participation Interest\" != '1' AND \"Participation Interest\" IS NOT NULL AND \"Participation Interest\" != ''",
        "status": "active"
    },
    "1247": {
        "rule_id": "1247",
        "rule_name": "Participation Interest NA Validation",
        "rule_description": "Validates that Participation Interest is 'NA' when Syndicated Loan Flag is 1, 2, or 3.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Syndicated Loan Flag\" IN ('1', '2', '3') AND \"Participation Interest\" != 'NA' AND \"Participation Interest\" IS NOT NULL AND \"Participation Interest\" != ''",
        "status": "active"
    },
    "1248": {
        "rule_id": "1248",
        "rule_name": "Participation Interest Fronting Exposure Validation",
        "rule_description": "Validates that Participation Interest is 1 for fronting exposures.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Fronting Exposure\" = 'Yes' AND \"Participation Interest\" != '1' AND \"Participation Interest\" IS NOT NULL AND \"Participation Interest\" != ''",
        "status": "active"
    },
    "1249": {
        "rule_id": "1249",
        "rule_name": "Leveraged Loan Flag Value Validation",
        "rule_description": "Validates that the Leveraged Loan Flag field contains only the values 1 or 2.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Leveraged Loan Flag\" IS NOT NULL AND \"Leveraged Loan Flag\" NOT IN (1, 2);",
        "status": "active"
    },
    "1250": {
        "rule_id": "1250",
        "rule_name": "Disposition Schedule Shift NULL Check (DispositionFlag != 7)",
        "rule_description": "Validates that Disposition Schedule Shift is NULL when DispositionFlag is not 7",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"DispositionFlag\" != 7 AND \"Disposition Schedule Shift\" IS NOT NULL",
        "status": "active"
    },
    "1251": {
        "rule_id": "1251",
        "rule_name": "Disposition Schedule Shift Format Validation",
        "rule_description": "Validates that Disposition Schedule Shift is in the format 'X.Y.Z' where X is 'Q' or 'M', Y is a letter, and Z is a number",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Disposition Schedule Shift\" IS NOT NULL AND \"Disposition Schedule Shift\" != '' AND NOT ((\"Disposition Schedule Shift\" LIKE 'Q._._' OR \"Disposition Schedule Shift\" LIKE 'M._._') AND substr(\"Disposition Schedule Shift\", 3, 1) GLOB '[A-Z]' AND substr(\"Disposition Schedule Shift\", 5, 1) GLOB '[0-9]')",
        "status": "active"
    },
    "1252": {
        "rule_id": "1252",
        "rule_name": "Disposition Schedule Shift NULL Check (DispositionFlag == 7)",
        "rule_description": "Validates that Disposition Schedule Shift is not NULL when DispositionFlag is 7",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"DispositionFlag\" = 7 AND (\"Disposition Schedule Shift\" IS NULL OR \"Disposition Schedule Shift\" = '')",
        "status": "active"
    },
    "1253": {
        "rule_id": "1253",
        "rule_name": "Target Hold Value Range for Syndicated Loans",
        "rule_description": "Validates that Target Hold is between 0 and 1 when Syndicated Loan Flag is 1, 2, or 3.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Syndicated Loan Flag\" IN (1, 2, 3) AND \"Target Hold\" NOT IN ('NA', '') AND \"Target Hold\" IS NOT NULL AND CAST(\"Target Hold\" AS REAL) NOT BETWEEN 0 AND 1",
        "status": "active"
    },
    "1254": {
        "rule_id": "1254",
        "rule_name": "Target Hold Value for Non-Syndicated Loans",
        "rule_description": "Validates that Target Hold is 'NA' when Syndicated Loan Flag is 0 or 4.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Syndicated Loan Flag\" IN (0, 4) AND (\"Target Hold\" IS NULL OR \"Target Hold\" <> 'NA')",
        "status": "active"
    },
    "1255": {
        "rule_id": "1255",
        "rule_name": "Target Hold Required Check",
        "rule_description": "Validates that Target Hold is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Target Hold\" IS NULL OR \"Target Hold\" = ''",
        "status": "active"
    },
    "1256": {
        "rule_id": "1256",
        "rule_name": "Target Hold Format Check",
        "rule_description": "Validates that Target Hold is in the correct decimal format (0.0005) or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Target Hold\" NOT IN ('NA', '') AND \"Target Hold\" IS NOT NULL AND NOT (CASE WHEN \"Target Hold\" LIKE '%.____' THEN 1 ELSE 0 END = 1 OR \"Target Hold\" = 'NA')",
        "status": "active"
    },
    "1257": {
        "rule_id": "1257",
        "rule_name": "ASC326-20 Value Greater Than or Equal to 0",
        "rule_description": "Validates that the ASC326-20 field value is greater than or equal to 0.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"ASC326-20\" < 0 AND \"ASC326-20\" IS NOT NULL;",
        "status": "active"
    },
    "1258": {
        "rule_id": "1258",
        "rule_name": "ASC326-20 Should be 0 if no Reserve",
        "rule_description": "Validates that the ASC326-20 field value is 0 if there is no ASC326-20 Reserve for the loan.  Assumes a column named 'ASC326-20 Reserve' exists and indicates whether a reserve exists (e.g., 0 or NULL for no reserve, 1 for reserve).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"ASC326-20 Reserve\" IS NULL OR \"ASC326-20 Reserve\" = 0) AND (\"ASC326-20\" != 0 AND \"ASC326-20\" IS NOT NULL);",
        "status": "active"
    },
    "1259": {
        "rule_id": "1259",
        "rule_name": "PCD Asset Noncredit Discount Blank Validation",
        "rule_description": "If the facility is not a purchased credit-deteriorated (PCD) asset, then the Purchased Credit Deteriorated Noncredit Discount field should be blank (NULL or empty string).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Purchased Credit Deteriorated  Noncredit Discount\" IS NOT NULL AND \"Purchased Credit Deteriorated  Noncredit Discount\" != '' AND NOT EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name LIKE '%PCD%') ",
        "status": "active"
    },
    "1260": {
        "rule_id": "1260",
        "rule_name": "PCD Asset Noncredit Discount Value Validation",
        "rule_description": "If the facility is a purchased credit-deteriorated (PCD) asset, then the Purchased Credit Deteriorated Noncredit Discount field should report the noncredit discount (or premium).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Purchased Credit Deteriorated  Noncredit Discount\" IS NULL OR \"Purchased Credit Deteriorated  Noncredit Discount\" = '' AND EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name LIKE '%PCD%')",
        "status": "active"
    },
    "1261": {
        "rule_id": "1261",
        "rule_name": "Current Maturity Date Format Validation",
        "rule_description": "Validates that the Current Maturity Date field is in YYYY-MM-DD format.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Maturity Date\" IS NOT NULL AND \"Current Maturity Date\" <> '' AND NOT GLOB '[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]' AND \"Current Maturity Date\" != '9999-01-01';",
        "status": "active"
    },
    "1262": {
        "rule_id": "1262",
        "rule_name": "Current Maturity Date for Demand Loan Validation",
        "rule_description": "Validates that the Current Maturity Date field is 9999-01-01 if the loan is a demand loan. Assuming a 'Demand Loan' column exists and contains a boolean or similar indicator.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Demand Loan\" = 1 AND \"Current Maturity Date\" IS NOT NULL AND \"Current Maturity Date\" <> '9999-01-01';",
        "status": "active"
    },
    "1263": {
        "rule_id": "1263",
        "rule_name": "Current Maturity Date Less Than or Equal to Report Date Validation",
        "rule_description": "Validates that the Current Maturity Date field is less than or equal to the report date. Assuming a 'Report Date' column exists.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Maturity Date\" IS NOT NULL AND \"Report Date\" IS NOT NULL AND \"Current Maturity Date\" <> '' AND \"Report Date\" <> '' AND \"Current Maturity Date\" != '9999-01-01' AND \"Current Maturity Date\" > \"Report Date\";",
        "status": "active"
    },
    "1264": {
        "rule_id": "1264",
        "rule_name": "Current Maturity Date Required Validation",
        "rule_description": "Validates that the Current Maturity Date field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Current Maturity Date\" IS NULL OR \"Current Maturity Date\" = '';",
        "status": "active"
    },
    "1265": {
        "rule_id": "1265",
        "rule_name": "Committed Exposure Global Par Value - LOCOM not NA",
        "rule_description": "If LOCOM is not 'NA', then Committed Exposure Global Par Value must not be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) = 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) IS NOT NULL;",
        "status": "active"
    },
    "1266": {
        "rule_id": "1266",
        "rule_name": "Committed Exposure Global Par Value - LOCOM is NA",
        "rule_description": "If LOCOM is 'NA', then Committed Exposure Global Par Value must be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) = 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) IS NOT NULL;",
        "status": "active"
    },
    "1267": {
        "rule_id": "1267",
        "rule_name": "Committed Exposure Global Par Value - LOCOM is LOCOM or FVO - Greater or Equal to 0 or NA",
        "rule_description": "If LOCOM is 'LOCOM' or 'FVO', then value must be greater than or equal to 0 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) IN ('LOCOM', 'FVO') AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) IS NOT NULL AND CAST((CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) AS REAL) < 0;",
        "status": "active"
    },
    "1268": {
        "rule_id": "1268",
        "rule_name": "Committed Exposure Global Par Value - LOCOM is LOCOM or FVO - Less or Equal to 999999999999999999.99 or NA",
        "rule_description": "If LOCOM is 'LOCOM' or 'FVO', then value must be less than or equal to 999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) IN ('LOCOM', 'FVO') AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) IS NOT NULL AND CAST((CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Par Value') THEN \"Committed Exposure Global Par Value\" ELSE 'NA' END) AS REAL) > 999999999999999999.99;",
        "status": "active"
    },
    "1269": {
        "rule_id": "1269",
        "rule_name": "Utilized Exposure Global Par Value Required When LOCOM is Not NA",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is not 'NA', then Utilized Exposure Global Par Value must not be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE LOCOM END) <> 'NA' AND \"Utilized Exposure Global Par Value\" = 'NA'",
        "status": "active"
    },
    "1270": {
        "rule_id": "1270",
        "rule_name": "Utilized Exposure Global Par Value NA When LOCOM is NA",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is 'NA', then Utilized Exposure Global Par Value must be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE LOCOM END) = 'NA' AND \"Utilized Exposure Global Par Value\" <> 'NA'",
        "status": "active"
    },
    "1271": {
        "rule_id": "1271",
        "rule_name": "Utilized Exposure Global Par Value Min Value When LOCOM is LOCOM or FVO",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is 'LOCOM' or 'FVO', then Utilized Exposure Global Par Value must be greater than or equal to -999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE ((CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE LOCOM END) = 'LOCOM' OR (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE LOCOM END) = 'FVO') AND \"Utilized Exposure Global Par Value\" <> 'NA' AND CAST(\"Utilized Exposure Global Par Value\" AS REAL) < -999999999999999999.99",
        "status": "active"
    },
    "1272": {
        "rule_id": "1272",
        "rule_name": "Utilized Exposure Global Par Value Max Value When LOCOM is LOCOM or FVO",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is 'LOCOM' or 'FVO', then Utilized Exposure Global Par Value must be less than or equal to 999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE ((CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE LOCOM END) = 'LOCOM' OR (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE LOCOM END) = 'FVO') AND \"Utilized Exposure Global Par Value\" <> 'NA' AND CAST(\"Utilized Exposure Global Par Value\" AS REAL) > 999999999999999999.99",
        "status": "active"
    },
    "1273": {
        "rule_id": "1273",
        "rule_name": "Committed Exposure Global Fair Value - LOCOM not NA",
        "rule_description": "If LOCOM is not 'NA', then Committed Exposure Global Fair Value must not be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Fair Value') THEN \"Committed Exposure Global Fair Value\" ELSE 'NA' END) = 'NA'",
        "status": "active"
    },
    "1274": {
        "rule_id": "1274",
        "rule_name": "Committed Exposure Global Fair Value - LOCOM is NA",
        "rule_description": "If LOCOM is 'NA', then Committed Exposure Global Fair Value must be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) = 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Fair Value') THEN \"Committed Exposure Global Fair Value\" ELSE 'NA' END) <> 'NA'",
        "status": "active"
    },
    "1275": {
        "rule_id": "1275",
        "rule_name": "Committed Exposure Global Fair Value - LOCOM is LOCOM or FVO - Minimum Value",
        "rule_description": "If LOCOM is 'LOCOM' or 'FVO', then value must be greater than or equal to -999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) IN ('LOCOM', 'FVO') AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Fair Value') THEN \"Committed Exposure Global Fair Value\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Fair Value') THEN \"Committed Exposure Global Fair Value\" ELSE 'NA' END) < -999999999999999999.99",
        "status": "active"
    },
    "1276": {
        "rule_id": "1276",
        "rule_name": "Committed Exposure Global Fair Value - LOCOM is LOCOM or FVO - Maximum Value",
        "rule_description": "If LOCOM is 'LOCOM' or 'FVO', then value must be less than or equal to 999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'LOCOM (Field 86 in H.1 or Field 52 in H.2)') THEN \"LOCOM (Field 86 in H.1 or Field 52 in H.2)\" ELSE 'NA' END) IN ('LOCOM', 'FVO') AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Fair Value') THEN \"Committed Exposure Global Fair Value\" ELSE 'NA' END) <> 'NA' AND (CASE WHEN EXISTS (SELECT 1 FROM pragma_table_info('transactions') WHERE name = 'Committed Exposure Global Fair Value') THEN \"Committed Exposure Global Fair Value\" ELSE 'NA' END) > 999999999999999999.99",
        "status": "active"
    },
    "1277": {
        "rule_id": "1277",
        "rule_name": "Utilized Exposure Global Fair Value Required When LOCOM is Not NA",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is not 'NA', then Utilized Exposure Global Fair Value must not be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (COALESCE(\"LOCOM (Field 86 in H.1)\", \"LOCOM (Field 52 in H.2)\") IS NOT 'NA') AND (\"Utilized Exposure Global Fair Value\" IS 'NA' OR \"Utilized Exposure Global Fair Value\" IS NULL);",
        "status": "active"
    },
    "1278": {
        "rule_id": "1278",
        "rule_name": "Utilized Exposure Global Fair Value Must Be NA When LOCOM is NA",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is 'NA', then Utilized Exposure Global Fair Value must be 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (COALESCE(\"LOCOM (Field 86 in H.1)\", \"LOCOM (Field 52 in H.2)\") IS 'NA') AND (\"Utilized Exposure Global Fair Value\" IS NOT 'NA' AND \"Utilized Exposure Global Fair Value\" IS NOT NULL);",
        "status": "active"
    },
    "1279": {
        "rule_id": "1279",
        "rule_name": "Utilized Exposure Global Fair Value Minimum Value Check When LOCOM is LOCOM or FVO",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is 'LOCOM' or 'FVO', then value must be greater than or equal to -999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (COALESCE(\"LOCOM (Field 86 in H.1)\", \"LOCOM (Field 52 in H.2)\") IN ('LOCOM', 'FVO')) AND (\"Utilized Exposure Global Fair Value\" IS NOT 'NA' AND \"Utilized Exposure Global Fair Value\" < -999999999999999999.99);",
        "status": "active"
    },
    "1280": {
        "rule_id": "1280",
        "rule_name": "Utilized Exposure Global Fair Value Maximum Value Check When LOCOM is LOCOM or FVO",
        "rule_description": "If LOCOM (Field 86 in H.1 or Field 52 in H.2) is 'LOCOM' or 'FVO', then value must be less than or equal to 999999999999999999.99 or equal to 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (COALESCE(\"LOCOM (Field 86 in H.1)\", \"LOCOM (Field 52 in H.2)\") IN ('LOCOM', 'FVO')) AND (\"Utilized Exposure Global Fair Value\" IS NOT 'NA' AND \"Utilized Exposure Global Fair Value\" > 999999999999999999.99);",
        "status": "active"
    },
    "1281": {
        "rule_id": "1281",
        "rule_name": "Obligor LEI Format Validation",
        "rule_description": "Validates that the Obligor LEI field is either 'NA' or a 20-character alphanumeric code.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Obligor LEI\" IS NOT NULL AND \"Obligor LEI\" != '' AND \"Obligor LEI\" != 'NA' AND NOT REGEXP_LIKE(\"Obligor LEI\", '^[A-Z0-9]{20}$') ",
        "status": "active"
    },
    "1282": {
        "rule_id": "1282",
        "rule_name": "Obligor LEI Valid LEI Check (Placeholder)",
        "rule_description": "Validates that if the Obligor LEI is not 'NA', it must be a valid LEI issued by a LOU of the Global LEI System.  This requires an external lookup and is represented by a placeholder query.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Obligor LEI\" IS NOT NULL AND \"Obligor LEI\" != '' AND \"Obligor LEI\" != 'NA' AND 0",
        "status": "active"
    },
    "1283": {
        "rule_id": "1283",
        "rule_name": "Obligor LEI Required Field Validation",
        "rule_description": "Validates that the Obligor LEI field is not null or empty.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"Obligor LEI\" IS NULL OR \"Obligor LEI\" = ''",
        "status": "active"
    },
    "1284": {
        "rule_id": "1284",
        "rule_name": "PSRLEI Format Validation",
        "rule_description": "Validates that PSRLEI is either 'NA' or matches the 20-character alphanumeric pattern.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"PSRLEI\" IS NOT NULL AND \"PSRLEI\" != '' AND \"PSRLEI\" != 'NA' AND NOT (\"PSRLEI\" GLOB '[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]')",
        "status": "active"
    },
    "1285": {
        "rule_id": "1285",
        "rule_name": "PSRLEI Valid LEI Check (Partial - Requires External Validation)",
        "rule_description": "Validates that if PSRLEI is not 'NA', it should be a valid LEI (This query only checks the format, full validation requires external LEI database).",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE \"PSRLEI\" IS NOT NULL AND \"PSRLEI\" != '' AND \"PSRLEI\" != 'NA' AND LENGTH(\"PSRLEI\") = 20 AND NOT (\"PSRLEI\" GLOB '[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]')",
        "status": "active"
    },
    "1286": {
        "rule_id": "1286",
        "rule_name": "PSRLEI Blank if Entity Internal ID Blank",
        "rule_description": "Validates that if Entity Internal ID is blank, then PSRLEI must be blank.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Entity Internal ID\" IS NULL OR \"Entity Internal ID\" = '') AND (\"PSRLEI\" IS NOT NULL AND \"PSRLEI\" != '')",
        "status": "active"
    },
    "1287": {
        "rule_id": "1287",
        "rule_name": "PSRLEI Populated if Entity Internal ID Not Blank",
        "rule_description": "Validates that if Entity Internal ID is not blank, then PSRLEI must be populated with a valid LEI or 'NA'.",
        "sql_query": "SELECT \"Transaction ID\" FROM transactions WHERE (\"Entity Internal ID\" IS NOT NULL AND \"Entity Internal ID\" != '') AND (\"PSRLEI\" IS NULL OR \"PSRLEI\" = '')",
        "status": "active"
    }
}